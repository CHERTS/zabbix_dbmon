name: CreateUbuntuDEBSelf

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Launch reason'
        required: true
        default: 'Create Ubuntu packages'

jobs:
  ubuntu-xenial:
    name: Ubuntu (Xenial)
    runs-on: [self-hosted, linux, ubuntu-xenial]
    steps:
    - name: Code checkout
      uses: actions/checkout@v2
    - name: Run create bin, img and styles directory
      run: mkdir -p ./bin/win32/dev ./bin/win64/dev ./ui/assets/img ./ui/assets/styles
    - name: Build zabbix dist
      run: |
        ./bootstrap.sh
        ./configure
         make dist
         echo "ZABBIX_VERSION=$(cat configure | grep PACKAGE_VERSION= | cut -d = -f2 | tr -d \')" >> $GITHUB_ENV
    - name: Prepare build DEB
      run: |
        cp "packages/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s).tar.gz" ubuntu.tar.gz && tar -zxf ubuntu.tar.gz
        dch -v "1:${{ env.ZABBIX_VERSION }}-1+$(lsb_release -c -s)" --distribution "$(lsb_release -c -s)" "Release ${{ env.ZABBIX_VERSION }}"
    - name: Build DEB
      env:
        GO111MODULE: on
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        dpkg-buildpackage -b -k${{ secrets.DBMON_GPG_KEYID }}
    - name: Remove old SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.REPO_SERVER_PRIVATE_KEY }}
        known_hosts: ${{ secrets.REPO_SERVER_KNOWN_HOSTS }}
    - name: Upload deb from dev server
      run: |
        scp ../*.deb ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.dsc ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.changes ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
    - name: Remove SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
  ubuntu-bionic:
    name: Ubuntu (Bionic)
    runs-on: [self-hosted, linux, ubuntu-bionic]
    steps:
    - name: Code checkout
      uses: actions/checkout@v2
    - name: Run create bin, img and styles directory
      run: mkdir -p ./bin/win32/dev ./bin/win64/dev ./ui/assets/img ./ui/assets/styles
    - name: Build zabbix dist
      run: |
        ./bootstrap.sh
        ./configure
         make dist
         echo "ZABBIX_VERSION=$(cat configure | grep PACKAGE_VERSION= | cut -d = -f2 | tr -d \')" >> $GITHUB_ENV
    - name: Prepare build DEB
      run: |
        cp "packages/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s).tar.gz" ubuntu.tar.gz && tar -zxf ubuntu.tar.gz
        dch -v "1:${{ env.ZABBIX_VERSION }}-1+$(lsb_release -c -s)" --distribution "$(lsb_release -c -s)" "Release ${{ env.ZABBIX_VERSION }}"
    - name: Build DEB
      env:
        GO111MODULE: on
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        dpkg-buildpackage -b -k${{ secrets.DBMON_GPG_KEYID }}
    - name: Remove old SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.REPO_SERVER_PRIVATE_KEY }}
        known_hosts: ${{ secrets.REPO_SERVER_KNOWN_HOSTS }}
    - name: Upload deb from dev server
      run: |
        scp ../*.deb ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.dsc ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.changes ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
    - name: Remove SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
  ubuntu-focal:
    name: Ubuntu (Focal)
    runs-on: [self-hosted, linux, ubuntu-focal]
    steps:
    - name: Code checkout
      uses: actions/checkout@v2
    - name: Run create bin, img and styles directory
      run: mkdir -p ./bin/win32/dev ./bin/win64/dev ./ui/assets/img ./ui/assets/styles
    - name: Build zabbix dist
      run: |
        ./bootstrap.sh
        ./configure
         make dist
         echo "ZABBIX_VERSION=$(cat configure | grep PACKAGE_VERSION= | cut -d = -f2 | tr -d \')" >> $GITHUB_ENV
    - name: Prepare build DEB
      run: |
        cp "packages/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s).tar.gz" ubuntu.tar.gz && tar -zxf ubuntu.tar.gz
        dch -v "1:${{ env.ZABBIX_VERSION }}-1+$(lsb_release -c -s)" --distribution "$(lsb_release -c -s)" "Release ${{ env.ZABBIX_VERSION }}"
    - name: Build DEB
      env:
        GO111MODULE: on
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        dpkg-buildpackage -b -k${{ secrets.DBMON_GPG_KEYID }}
    - name: Remove old SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.REPO_SERVER_PRIVATE_KEY }}
        known_hosts: ${{ secrets.REPO_SERVER_KNOWN_HOSTS }}
    - name: Upload deb from dev server
      run: |
        scp ../*.deb ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.dsc ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
        scp ../*.changes ${{ secrets.REPO_SERVER_USER }}@${{ secrets.REPO_SERVER }}:zabbix-dbmon/$(lsb_release -i -s | tr '[:upper:]' '[:lower:]')/$(lsb_release -c -s)/
    - name: Remove SSH key
      run: |
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/id_rsa 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/known_hosts 2>/dev/null; fi
        if [ -d $HOME/.ssh ]; then rm -f $HOME/.ssh/config 2>/dev/null; fi
