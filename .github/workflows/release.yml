name: Release

on:
#  push:
#    tags:
#      - 'v*'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Launch reason'
        required: true
        default: 'Create new release'

jobs:
  github-job-release:
    name: Ubuntu
    runs-on: [ubuntu-18.04]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf automake gcc make wget unzip gettext sass libxml2-dev libssl-dev libcurl4-openssl-dev libpcre2-dev libconfig-dev
        sudo apt-get install -y dpkg-dev devscripts git dh-make build-essential autoconf autotools-dev quilt pkg-config tar xz-utils curl
        sudo apt-get install -y libmysqlclient-dev libpq-dev
    - name: Code checkout
      uses: actions/checkout@v2
    - name: Delete old binary
      run: |
        rm -rf ./bin/aix_7.1 2>/dev/null
        rm -rf ./bin/ubuntu 2>/dev/null
        rm -rf ./bin/ubuntu_only_pgsql 2>/dev/null
        rm -rf ./bin/win32/*.dll 2>/dev/null
        rm -rf ./bin/win32/*.exe 2>/dev/null
        rm -rf ./bin/win32/*.cmd 2>/dev/null
        rm -rf ./bin/win64/*.dll 2>/dev/null
        rm -rf ./bin/win64/*.exe 2>/dev/null
        rm -rf ./bin/win64/*.cmd 2>/dev/null
        rm -f ./include/version.h.win 2>/dev/null
    - name: Run create bin, img and styles directory
      run: mkdir -p ./bin/win32/dev ./bin/win64/dev ./ui/assets/img ./ui/assets/styles
    - name: Build zabbix dist
      run: |
        ./bootstrap.sh
        ./configure
        make dbschema
        make gettext
        make css
        make dist
    - name: Get current Zabbix version
      run: echo "ZABBIX_VERSION=$(cat configure | grep PACKAGE_VERSION= | cut -d = -f2 | tr -d \')" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.ZABBIX_VERSION }}
        release_name: Zabbix v${{ env.ZABBIX_VERSION }} (unofficial) now released
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zabbix-${{ env.ZABBIX_VERSION }}.tar.gz
        asset_name: zabbix-${{ env.ZABBIX_VERSION }}.tar.gz
        asset_content_type: application/gzip
