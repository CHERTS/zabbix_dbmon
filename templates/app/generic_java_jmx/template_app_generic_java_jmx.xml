<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
   <version>5.0</version>
   <date>2020-07-14T06:56:18Z</date>
   <groups>
      <group>
         <name>Templates/Applications</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>Template App Generic Java JMX</template>
         <name>Template App Generic Java JMX</name>
         <description>Template tooling version used: 0.38</description>
         <groups>
            <group>
               <name>Templates/Applications</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>JMX</name>
            </application>
         </applications>
         <items>
            <item>
               <name>ClassLoading: Loaded class count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=ClassLoading","LoadedClassCount"]</key>
               <history>7d</history>
               <description>Displays number of classes that are currently loaded in the Java virtual machine.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>ClassLoading: Total loaded class count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=ClassLoading","TotalLoadedClassCount"]</key>
               <history>7d</history>
               <description>Displays the total number of classes that have been loaded since the Java virtual machine has started execution.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>ClassLoading: Unloaded class count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=ClassLoading","UnloadedClassCount"]</key>
               <history>7d</history>
               <description>Displays the total number of classes that have been loaded since the Java virtual machine has started execution.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Compilation: Name of the current JIT compiler</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Compilation","Name"]</key>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>Displays the total number of classes unloaded since the Java virtual machine has started execution.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>30m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
               <triggers>
                  <trigger>
                     <expression>{str(Client)}=1</expression>
                     <name>Compilation: {HOST.NAME} uses suboptimal JIT compiler</name>
                     <priority>INFO</priority>
                     <manual_close>YES</manual_close>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Compilation: Accumulated time spent</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Compilation","TotalCompilationTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated elapsed time spent in compilation, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: ConcurrentMarkSweep number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=ConcurrentMarkSweep","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: ConcurrentMarkSweep accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=ConcurrentMarkSweep","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: Copy number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=Copy","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: Copy accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=Copy","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: MarkSweepCompact number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=MarkSweepCompact","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: MarkSweepCompact accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=MarkSweepCompact","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: ParNew number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=ParNew","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: ParNew accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=ParNew","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: PS MarkSweep number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=PS MarkSweep","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: PS MarkSweep accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=PS MarkSweep","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: PS Scavenge number of collections per second</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=PS Scavenge","CollectionCount"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>Displays the total number of collections that have occurred per second.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>GarbageCollector: PS Scavenge accumulated time spent in collection</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=GarbageCollector,name=PS Scavenge","CollectionTime"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Heap memory committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","HeapMemoryUsage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current heap memory allocated. This amount of memory is guaranteed for the Java virtual machine to use.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Heap memory maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","HeapMemoryUsage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of heap that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Heap memory used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","HeapMemoryUsage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage outside the heap.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Non-Heap memory committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","NonHeapMemoryUsage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated outside the heap. This amount of memory is guaranteed for the Java virtual machine to use.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Non-Heap memory maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","NonHeapMemoryUsage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of non-heap memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Non-Heap memory used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","NonHeapMemoryUsage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage outside the heap</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Memory: Object pending finalization count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Memory","ObjectPendingFinalizationCount"]</key>
               <history>7d</history>
               <description>The approximate number of objects for which finalization is pending.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Old Gen committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Old Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Old Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Perm Gen committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Perm Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CMS Perm Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Code Cache committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: CodeCache maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Code Cache used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Perm Gen committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Perm Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Perm Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Old Gen</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Old Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Old Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Perm Gen committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Perm Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: PS Perm Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Tenured Gen committed</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.committed"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory allocated</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Tenured Gen maximum size</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.max"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>MemoryPool: Tenured Gen used</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.used"]</key>
               <history>7d</history>
               <units>B</units>
               <description>Current memory usage</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>OperatingSystem: File descriptors maximum count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=OperatingSystem","MaxFileDescriptorCount"]</key>
               <history>7d</history>
               <description>This is the number of file descriptors we can have opened in the same process, as determined by the operating system. You can never have more file descriptors than this number.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>OperatingSystem: File descriptors opened</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=OperatingSystem","OpenFileDescriptorCount"]</key>
               <history>7d</history>
               <description>This is the number of opened file descriptors at the moment, if this reaches the MaxFileDescriptorCount, the application will throw an IOException: Too many open files. This could mean you’re are opening file descriptors and never closing them.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>OperatingSystem: Process CPU Load</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=OperatingSystem","ProcessCpuLoad"]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <description>ProcessCpuLoad represents the CPU load in this process.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>100</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
               <triggers>
                  <trigger>
                     <expression>{min({$JMX.CPU.LOAD.TIME})}&gt;{$JMX.CPU.LOAD.MAX}</expression>
                     <name>OperatingSystem: Process CPU Load more than {$JMX.CPU.LOAD.MAX}% for {$JMX.CPU.LOAD.TIME}</name>
                     <priority>AVERAGE</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Runtime: JVM uptime</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Runtime","Uptime"]</key>
               <history>7d</history>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.001</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
               <triggers>
                  <trigger>
                     <expression>{nodata(5m)}=1</expression>
                     <name>Runtime: JVM is not reachable</name>
                     <priority>AVERAGE</priority>
                     <manual_close>YES</manual_close>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Runtime: JVM name</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Runtime","VmName"]</key>
               <delay>1h</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>30m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
               <triggers>
                  <trigger>
                     <expression>{str(Server)}&lt;&gt;1</expression>
                     <name>Runtime: {HOST.NAME} runs suboptimal VM type</name>
                     <priority>INFO</priority>
                     <manual_close>YES</manual_close>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Runtime: JVM version</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Runtime","VmVersion"]</key>
               <delay>1h</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>30m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Threading: Daemon thread count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Threading","DaemonThreadCount"]</key>
               <history>7d</history>
               <description>Number of daemon threads running.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>10m</params>
                  </step>
               </preprocessing>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Threading: Peak thread count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Threading","PeakThreadCount"]</key>
               <history>7d</history>
               <description>Maximum number of threads being executed at the same time since the JVM was started or the peak was reset.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Threading: Thread count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Threading","ThreadCount"]</key>
               <history>7d</history>
               <description>The number of threads running at the current moment.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
            <item>
               <name>Threading: Total started thread count</name>
               <type>JMX</type>
               <key>jmx["java.lang:type=Threading","TotalStartedThreadCount"]</key>
               <history>7d</history>
               <description>The number of threads started since the JVM was launched.</description>
               <applications>
                  <application>
                     <name>JMX</name>
                  </application>
               </applications>
               <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
            </item>
         </items>
         <macros>
            <macro>
               <macro>{$JMX.CPU.LOAD.MAX}</macro>
               <value>85</value>
               <description>A threshold in percent for CPU utilization trigger.</description>
            </macro>
            <macro>
               <macro>{$JMX.CPU.LOAD.TIME}</macro>
               <value>5m</value>
               <description>The time during which the CPU utilization may exceed the threshold.</description>
            </macro>
            <macro>
               <macro>{$JMX.FILE.DESCRIPTORS.MAX}</macro>
               <value>85</value>
               <description>A threshold in percent for file descriptors count trigger.</description>
            </macro>
            <macro>
               <macro>{$JMX.FILE.DESCRIPTORS.TIME}</macro>
               <value>3m</value>
               <description>The time during which the file descriptors count may exceed the threshold.</description>
            </macro>
            <macro>
               <macro>{$JMX.HEAP.MEM.USAGE.MAX}</macro>
               <value>85</value>
               <description>A threshold in percent for Heap memory utilization trigger.</description>
            </macro>
            <macro>
               <macro>{$JMX.HEAP.MEM.USAGE.TIME}</macro>
               <value>10m</value>
               <description>The time during which the Heap memory utilization may exceed the threshold.</description>
            </macro>
            <macro>
               <macro>{$JMX.MP.USAGE.MAX}</macro>
               <value>85</value>
               <description>A threshold in percent for memory pools utilization trigger. Use a context to change the threshold for a specific pool.</description>
            </macro>
            <macro>
               <macro>{$JMX.MP.USAGE.TIME}</macro>
               <value>10m</value>
               <description>The time during which the memory pools utilization may exceed the threshold.</description>
            </macro>
            <macro>
               <macro>{$JMX.NONHEAP.MEM.USAGE.MAX}</macro>
               <value>85</value>
               <description>A threshold in percent for Non-heap memory utilization trigger.</description>
            </macro>
            <macro>
               <macro>{$JMX.NONHEAP.MEM.USAGE.TIME}</macro>
               <value>10m</value>
               <description>The time during which the Non-heap memory utilization may exceed the threshold.</description>
            </macro>
         </macros>
      </template>
   </templates>
   <triggers>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=ConcurrentMarkSweep","CollectionCount"].last()}&gt;{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=ParNew","CollectionCount"].last()}</expression>
         <name>GarbageCollector: Concurrent Mark Sweep in fire fighting mode</name>
         <priority>AVERAGE</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=MarkSweepCompact","CollectionCount"].last()}&gt;{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=Copy","CollectionCount"].last()}</expression>
         <name>GarbageCollector: Mark Sweep Compact in fire fighting mode</name>
         <priority>AVERAGE</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=PS MarkSweep","CollectionCount"].last()}&gt;{Template App Generic Java JMX:jmx["java.lang:type=GarbageCollector,name=PS Scavenge","CollectionCount"].last()}</expression>
         <name>GarbageCollector: PS Mark Sweep in fire fighting mode</name>
         <priority>AVERAGE</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=Memory","HeapMemoryUsage.used"].min({$JMX.HEAP.MEM.USAGE.TIME})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=Memory","HeapMemoryUsage.max"].last()}*{$JMX.HEAP.MEM.USAGE.MAX}/100)</expression>
         <name>Memory: Heap memory usage more than {$JMX.HEAP.USAGE.MAX}% for {$JMX.HEAP.MEM.USAGE.TIME}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=Memory","NonHeapMemoryUsage.used"].min({$JMX.NONHEAP.MEM.USAGE.TIME})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=Memory","NonHeapMemoryUsage.max"].last()}*{$JMX.NONHEAP.MEM.USAGE.MAX}/100)</expression>
         <name>Memory: Non-Heap memory usage more than {$JMX.NONHEAP.MEM.USAGE.MAX}% for {$JMX.NONHEAP.MEM.USAGE.TIME}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"CMS Old Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"CMS Old Gen"}/100)</expression>
         <name>MemoryPool: CMS Old Gen memory usage more than {$JMX.MP.USAGE.MAX:"CMS Old Gen"}% for {$JMX.MP.USAGE.TIME:"CMS Old Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"CMS Perm Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"CMS Perm Gen"}/100)</expression>
         <name>MemoryPool: CMS Perm Gen memory usage more than {$JMX.MP.USAGE.MAX:"CMS Perm Gen"}% for {$JMX.MP.USAGE.TIME:"CMS Perm Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.used"].min({$JMX.MP.USAGE.TIME:"Code Cache"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"Code Cache"}/100)</expression>
         <name>MemoryPool: Code Cache memory usage more than {$JMX.MP.USAGE.MAX:"Code Cache"}% for {$JMX.MP.USAGE.TIME:"Code Cache"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"Perm Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"Perm Gen"}/100)</expression>
         <name>MemoryPool: Perm Gen memory usage more than {$JMX.MP.USAGE.MAX:"Perm Gen"}% for {$JMX.MP.USAGE.TIME:"Perm Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"PS Old Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"PS Old Gen"}/100)</expression>
         <name>MemoryPool: PS Old Gen memory usage more than {$JMX.MP.USAGE.MAX:"PS Old Gen"}% for {$JMX.MP.USAGE.TIME:"PS Old Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"PS Perm Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"PS Perm Gen"}/100)</expression>
         <name>MemoryPool: PS Perm Gen memory usage more than {$JMX.MP.USAGE.MAX:"PS Perm Gen"}% for {$JMX.MP.USAGE.TIME:"PS Perm Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.used"].min({$JMX.MP.USAGE.TIME:"Tenured Gen"})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.max"].last()}*{$JMX.MP.USAGE.MAX:"Tenured Gen"}/100)</expression>
         <name>MemoryPool: Tenured Gen memory usage more than {$JMX.MP.USAGE.MAX:"Tenured Gen"}% for {$JMX.MP.USAGE.TIME:"Tenured Gen"}</name>
         <priority>WARNING</priority>
      </trigger>
      <trigger>
         <expression>{Template App Generic Java JMX:jmx["java.lang:type=OperatingSystem","OpenFileDescriptorCount"].min({$JMX.FILE.DESCRIPTORS.TIME})}&gt;({Template App Generic Java JMX:jmx["java.lang:type=OperatingSystem","MaxFileDescriptorCount"].last()}*{$JMX.FILE.DESCRIPTORS.MAX}/100)</expression>
         <name>OperatingSystem: Opened file descriptor count more than {$JMX.FILE.DESCRIPTORS.MAX}% of maximum</name>
         <priority>WARNING</priority>
      </trigger>
   </triggers>
   <graphs>
      <graph>
         <name>ClassLoading: Class Loader</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=ClassLoading","TotalLoadedClassCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=ClassLoading","UnloadedClassCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=ClassLoading","LoadedClassCount"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>GarbageCollector: Garbage Collector collections per second</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=ConcurrentMarkSweep","CollectionCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=Copy","CollectionCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=ParNew","CollectionCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>3</sortorder>
               <color>A54F10</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=MarkSweepCompact","CollectionCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>4</sortorder>
               <color>FC6EA3</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=PS MarkSweep","CollectionCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>5</sortorder>
               <color>6C59DC</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=GarbageCollector,name=PS Scavenge","CollectionCount"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool CMS Old Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Old Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool CMS Perm Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=CMS Perm Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool Code Cache</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Code Cache","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool Perm Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Perm Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool PS Old Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Old Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool PS Perm Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=PS Perm Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>MemoryPool: Memory Pool Tenured Gen</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.max"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.committed"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=MemoryPool,name=Tenured Gen","Usage.used"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>OperatingSystem: File Descriptors</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=OperatingSystem","MaxFileDescriptorCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=OperatingSystem","OpenFileDescriptorCount"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>Threading: Threads</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=Threading","PeakThreadCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=Threading","DaemonThreadCount"]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App Generic Java JMX</host>
                  <key>jmx["java.lang:type=Threading","ThreadCount"]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
   </graphs>
</zabbix_export>
