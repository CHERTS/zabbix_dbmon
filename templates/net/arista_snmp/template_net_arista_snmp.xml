<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
   <version>5.0</version>
   <date>2020-10-22T12:34:41Z</date>
   <groups>
      <group>
         <name>Templates/Network devices</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>Template Net Arista SNMP</template>
         <name>Template Net Arista SNMP</name>
         <description>Template Net Arista&#13;
&#13;
MIBs used:&#13;
ENTITY-SENSORS-MIB&#13;
ENTITY-STATE-MIB&#13;
ENTITY-MIB&#13;
&#13;
Template tooling version used: 0.38</description>
         <templates>
            <template>
               <name>Template Module EtherLike-MIB SNMP</name>
            </template>
            <template>
               <name>Template Module Generic SNMP</name>
            </template>
            <template>
               <name>Template Module HOST-RESOURCES-MIB SNMP</name>
            </template>
            <template>
               <name>Template Module Interfaces SNMP</name>
            </template>
         </templates>
         <groups>
            <group>
               <name>Templates/Network devices</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Fans</name>
            </application>
            <application>
               <name>Inventory</name>
            </application>
            <application>
               <name>Power supply</name>
            </application>
            <application>
               <name>Temperature</name>
            </application>
            <application>
               <name>Voltage</name>
            </application>
            <application>
               <name>Zabbix raw items</name>
            </application>
         </applications>
         <items>
            <item>
               <name>Get sensors</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#SENSOR_TYPE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2,{#SENSOR_PRECISION},1.3.6.1.2.1.99.1.1.1.3,{#THRESHOLD_LO_WARN},1.3.6.1.4.1.30065.3.12.1.1.1.1,{#THRESHOLD_LO_CRIT},1.3.6.1.4.1.30065.3.12.1.1.1.2,{#THRESHOLD_HI_WARN},1.3.6.1.4.1.30065.3.12.1.1.1.3,{#THRESHOLD_HI_CRIT},1.3.6.1.4.1.30065.3.12.1.1.1.4]</snmp_oid>
               <key>sensors.get</key>
               <delay>1h</delay>
               <history>0</history>
               <trends>0</trends>
               <value_type>TEXT</value_type>
               <description>Gets sensors with type, description, and thresholds.</description>
               <applications>
                  <application>
                     <name>Zabbix raw items</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>try {
    var data = JSON.parse(value);
}
catch (error) {
    throw 'Failed to parse JSON of Arista sensor discovery.';
}
var fields = ['{#SNMPINDEX}','{#SENSOR_TYPE}','{#SENSOR_INFO}','{#SENSOR_PRECISION}','{#THRESHOLD_LO_WARN}','{#THRESHOLD_LO_CRIT}','{#THRESHOLD_HI_WARN}','{#THRESHOLD_HI_CRIT}'];
data.forEach(function (element) {
    fields.forEach(function (field) {
        element[field] = element[field] || '';
    });
});
return JSON.stringify(data);</params>
                  </step>
               </preprocessing>
            </item>
         </items>
         <discovery_rules>
            <discovery_rule>
               <name>Entity discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]</snmp_oid>
               <key>entity.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND_OR</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#ENT_CLASS}</macro>
                        <value>3</value>
                        <formulaid>A</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <item_prototypes>
                  <item_prototype>
                     <name>{#ENT_NAME}: Hardware model name</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}</snmp_oid>
                     <key>system.hw.model[entPhysicalModelName.{#SNMPINDEX}]</key>
                     <delay>1h</delay>
                     <history>2w</history>
                     <trends>0</trends>
                     <value_type>CHAR</value_type>
                     <description>MIB: ENTITY-MIB</description>
                     <applications>
                        <application>
                           <name>Inventory</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>6h</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#ENT_NAME}: Hardware serial number</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}</snmp_oid>
                     <key>system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}]</key>
                     <delay>1h</delay>
                     <history>2w</history>
                     <trends>0</trends>
                     <value_type>CHAR</value_type>
                     <description>MIB: ENTITY-MIB</description>
                     <applications>
                        <application>
                           <name>Inventory</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>6h</params>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                           <name>{#ENT_NAME}: Device has been replaced (new serial number received)</name>
                           <priority>INFO</priority>
                           <description>Device serial number has changed. Ack to close</description>
                           <manual_close>YES</manual_close>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <host_prototypes/>
            </discovery_rule>
            <discovery_rule>
               <name>Fan discovery</name>
               <type>DEPENDENT</type>
               <key>fan.discovery</key>
               <delay>0</delay>
               <filter>
                  <evaltype>OR</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#SENSOR_TYPE}</macro>
                        <value>10</value>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>ENTITY-SENSORS-MIB::EntitySensorDataType discovery with rpm filter</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#SENSOR_INFO}: Fan speed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}]</key>
                     <units>rpm</units>
                     <description>MIB: ENTITY-SENSORS-MIB&#13;
The most recent measurement obtained by the agent for this sensor.&#13;
To correctly interpret the value of this object, the associated entPhySensorType,&#13;
entPhySensorScale, and entPhySensorPrecision objects must also be examined.</description>
                     <applications>
                        <application>
                           <name>Fans</name>
                        </application>
                     </applications>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_WARN}</expression>
                           <name>{#SENSOR_INFO}: Fan speed is below the warning threshold of {#THRESHOLD_LO_WARN}rpm for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses fan sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                              </dependency>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan speed is below the critical threshold of {#THRESHOLD_LO_CRIT}rpm for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}].max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Fan speed is below the critical threshold of {#THRESHOLD_LO_CRIT}rpm for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses fan sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_WARN}</expression>
                           <name>{#SENSOR_INFO}: Fan speed is above the warning threshold of {#THRESHOLD_HI_WARN}rpm for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses fan sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                              </dependency>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan speed is above the critical threshold of {#THRESHOLD_HI_CRIT}rpm for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}].min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Fan speed is above the critical threshold of {#THRESHOLD_HI_CRIT}rpm for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses fan sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                 <expression>{Template Net Arista SNMP:sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>{#SENSOR_INFO}: Fan status</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>2w</history>
                     <trends>0d</trends>
                     <description>MIB: ENTITY-SENSORS-MIB&#13;
The operational status of the sensor {#SENSOR_INFO}</description>
                     <applications>
                        <application>
                           <name>Fans</name>
                        </application>
                     </applications>
                     <valuemap>
                        <name>ENTITY-SENSORS-MIB::EntitySensorStatus</name>
                     </valuemap>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                           <name>{#SENSOR_INFO}: Fan is in critical state</name>
                           <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                           <priority>AVERAGE</priority>
                           <description>Please check the fan unit</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <host_prototypes/>
               <master_item>
                  <key>sensors.get</key>
               </master_item>
               <overrides>
                  <override>
                     <name>trigger THRESHOLD_LO_WARN</name>
                     <step>1</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Fan speed is below the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_LO_CRIT</name>
                     <step>2</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Fan speed is below the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_WARN</name>
                     <step>3</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Fan speed is above the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_CRIT</name>
                     <step>4</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Fan speed is above the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
               </overrides>
            </discovery_rule>
            <discovery_rule>
               <name>PSU discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]</snmp_oid>
               <key>psu.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND_OR</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#ENT_CLASS}</macro>
                        <value>6</value>
                        <formulaid>A</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <item_prototypes>
                  <item_prototype>
                     <name>{#ENT_NAME}: Power supply status</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.131.1.1.1.3.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.psu.status[entStateOper.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>2w</history>
                     <trends>0d</trends>
                     <description>MIB: ENTITY-STATE-MIB</description>
                     <applications>
                        <application>
                           <name>Power supply</name>
                        </application>
                     </applications>
                     <valuemap>
                        <name>ENTITY-STATE-MIB::EntityOperState</name>
                     </valuemap>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{count(#1,{$PSU_CRIT_STATUS},eq)}=1</expression>
                           <name>{#ENT_NAME}: Power supply is in critical state</name>
                           <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                           <priority>AVERAGE</priority>
                           <description>Please check the power supply unit for errors</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <host_prototypes/>
            </discovery_rule>
            <discovery_rule>
               <name>Temperature discovery</name>
               <type>DEPENDENT</type>
               <key>temp.discovery</key>
               <delay>0</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#SENSOR_TYPE}</macro>
                        <value>8</value>
                        <formulaid>B</formulaid>
                     </condition>
                     <condition>
                        <macro>{#SENSOR_PRECISION}</macro>
                        <value>1</value>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>ENTITY-SENSORS-MIB::EntitySensorDataType discovery with celsius filter</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#SENSOR_INFO}: Temperature status</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.temp.status[entPhySensorOperStatus.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>2w</history>
                     <trends>0d</trends>
                     <description>MIB: ENTITY-SENSORS-MIB&#13;
The operational status of the sensor {#SENSOR_INFO}</description>
                     <applications>
                        <application>
                           <name>Temperature</name>
                        </application>
                     </applications>
                     <valuemap>
                        <name>ENTITY-SENSORS-MIB::EntitySensorStatus</name>
                     </valuemap>
                  </item_prototype>
                  <item_prototype>
                     <name>{#SENSOR_INFO}: Temperature</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.temp.value[entPhySensorValue.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <value_type>FLOAT</value_type>
                     <units>°C</units>
                     <description>MIB: ENTITY-SENSORS-MIB&#13;
The most recent measurement obtained by the agent for this sensor.&#13;
To correctly interpret the value of this object, the associated entPhySensorType,&#13;
entPhySensorScale, and entPhySensorPrecision objects must also be examined.</description>
                     <applications>
                        <application>
                           <name>Temperature</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>0.1</params>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_WARN}</expression>
                           <name>{#SENSOR_INFO}: Temperature is below the warning threshold of {#THRESHOLD_LO_WARN}°C for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses temperature sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Temperature is below the critical threshold of {#THRESHOLD_LO_CRIT}°C for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Temperature is below the critical threshold of {#THRESHOLD_LO_CRIT}°C for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses temperature sensor values defined in the device.</description>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_WARN}</expression>
                           <name>{#SENSOR_INFO}: Temperature is above the warning threshold of {#THRESHOLD_HI_WARN}°C for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses temperature sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Temperature is above the critical threshold of {#THRESHOLD_HI_CRIT}°C for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Temperature is above the critical threshold of {#THRESHOLD_HI_CRIT}°C for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses temperature sensor values defined in the device.</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <host_prototypes/>
               <master_item>
                  <key>sensors.get</key>
               </master_item>
               <overrides>
                  <override>
                     <name>trigger THRESHOLD_LO_WARN</name>
                     <step>1</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Temperature is below the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_LO_CRIT</name>
                     <step>2</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Temperature is below the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_WARN</name>
                     <step>3</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Temperature is above the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_CRIT</name>
                     <step>4</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Temperature is above the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
               </overrides>
            </discovery_rule>
            <discovery_rule>
               <name>Voltage discovery</name>
               <type>DEPENDENT</type>
               <key>voltage.discovery</key>
               <delay>0</delay>
               <filter>
                  <evaltype>OR</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#SENSOR_TYPE}</macro>
                        <value>3|4</value>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>ENTITY-SENSORS-MIB::EntitySensorDataType discovery with volts filter</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#SENSOR_INFO}: Voltage</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}</snmp_oid>
                     <key>sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}]</key>
                     <value_type>FLOAT</value_type>
                     <units>V</units>
                     <description>MIB: ENTITY-SENSORS-MIB&#13;
The most recent measurement obtained by the agent for this sensor.&#13;
To correctly interpret the value of this object, the associated entPhySensorType,&#13;
entPhySensorScale, and entPhySensorPrecision objects must also be examined.</description>
                     <applications>
                        <application>
                           <name>Voltage</name>
                        </application>
                     </applications>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_WARN}</expression>
                           <name>{#SENSOR_INFO}: Voltage is below the warning threshold of {#THRESHOLD_LO_WARN}V for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses voltage sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Voltage is below the critical threshold of {#THRESHOLD_LO_CRIT}V for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}].max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{max(5m)} &lt; {#THRESHOLD_LO_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Voltage is below the critical threshold of {#THRESHOLD_LO_CRIT}V for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses voltage sensor values defined in the device.</description>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_WARN}</expression>
                           <name>{#SENSOR_INFO}: Voltage is above the warning threshold of {#THRESHOLD_HI_WARN}V for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>This trigger uses voltage sensor values defined in the device.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#SENSOR_INFO}: Voltage is above the critical threshold of {#THRESHOLD_HI_CRIT}V for 5m</name>
                                 <expression>{Template Net Arista SNMP:sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}].min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)} &gt; {#THRESHOLD_HI_CRIT}</expression>
                           <name>{#SENSOR_INFO}: Voltage is above the critical threshold of {#THRESHOLD_HI_CRIT}V for 5m</name>
                           <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                           <priority>HIGH</priority>
                           <description>This trigger uses voltage sensor values defined in the device.</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <host_prototypes/>
               <master_item>
                  <key>sensors.get</key>
               </master_item>
               <overrides>
                  <override>
                     <name>trigger THRESHOLD_LO_WARN</name>
                     <step>1</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Voltage is below the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_LO_CRIT</name>
                     <step>2</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_LO_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Voltage is below the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_WARN</name>
                     <step>3</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_WARN}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Voltage is above the warning threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
                  <override>
                     <name>trigger THRESHOLD_HI_CRIT</name>
                     <step>4</step>
                     <filter>
                        <conditions>
                           <condition>
                              <macro>{#THRESHOLD_HI_CRIT}</macro>
                              <value>^$</value>
                              <formulaid>A</formulaid>
                           </condition>
                        </conditions>
                     </filter>
                     <operations>
                        <operation>
                           <operationobject>TRIGGER_PROTOTYPE</operationobject>
                           <operator>REGEXP</operator>
                           <value>Voltage is above the critical threshold</value>
                           <status>ENABLED</status>
                           <discover>NO_DISCOVER</discover>
                        </operation>
                     </operations>
                  </override>
               </overrides>
            </discovery_rule>
         </discovery_rules>
         <macros>
            <macro>
               <macro>{$FAN_CRIT_STATUS}</macro>
               <value>3</value>
            </macro>
            <macro>
               <macro>{$MEMORY.NAME.NOT_MATCHES}</macro>
               <value>(Buffer|Cache)</value>
               <description>Filter is overridden to ignore RAM(Cache) and RAM(Buffers) memory objects.</description>
            </macro>
            <macro>
               <macro>{$PSU_CRIT_STATUS}</macro>
               <value>2</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
               <value>95</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
               <value>90</value>
            </macro>
         </macros>
      </template>
   </templates>
   <value_maps>
      <value_map>
         <name>ENTITY-STATE-MIB::EntityOperState</name>
         <mappings>
            <mapping>
               <value>1</value>
               <newvalue>unknown</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>disabled</newvalue>
            </mapping>
            <mapping>
               <value>3</value>
               <newvalue>enabled</newvalue>
            </mapping>
            <mapping>
               <value>4</value>
               <newvalue>testing</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>ENTITY-SENSORS-MIB::EntitySensorStatus</name>
         <mappings>
            <mapping>
               <value>1</value>
               <newvalue>ok</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>unavailable</newvalue>
            </mapping>
            <mapping>
               <value>3</value>
               <newvalue>nonoperational</newvalue>
            </mapping>
         </mappings>
      </value_map>
   </value_maps>
</zabbix_export>
