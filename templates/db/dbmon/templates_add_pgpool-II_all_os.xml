<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2020-11-10T11:08:03Z</date>
    <groups>
        <group>
            <name>DBS.Templates/Modules</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>DBS_Template App PGpool-II</template>
            <name>App PGpool-II (Active, DBMON, for all OS)</name>
            <description>Pgpool-II is a middleware that works between PostgreSQL servers and a PostgreSQL database client. It is licensed under BSD license. It provides the following features: Connection Pooling, Replication, Load Balancing, Limiting Exceeding Connections, Watchdog, In Memory Query Cache.&#13;
&#13;
This template was developed by Mikhail Grigorev for the Distributed Service company.&#13;
&#13;
Support e-mail: m.grigoriev@db-service.ru&#13;
&#13;
Version: 1.0</description>
            <groups>
                <group>
                    <name>DBS.Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>PGpool-II: Cache</name>
                </application>
                <application>
                    <name>PGpool-II: Status</name>
                </application>
                <application>
                    <name>stubs</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Log file of '{$DBS_PGPOOL_LOGFILE}' content</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>logrt[&quot;{$DBS_PGPOOL_LOGFILE}&quot;,&quot;{$DBS_PGPOOL_LOG_REGEXP}&quot;,,,skip,,,{$DBS_PGPOOL_LOG_OPTIONS}]</key>
                    <delay>30s</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <description>Log file content</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Status</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{iregexp(&quot;pgpool is not accepting any new connections&quot;)}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>{{ITEM.VALUE}.iregsub(&quot;.*pgpool is not accepting any new connections&quot;, &quot;PGpool-II is not accepting any new connections&quot;)}</name>
                            <priority>HIGH</priority>
                            <description>PGpool-II перестал принимать новые соединения.&#13;
Срочно доведите информацию до заказчика и эксперта.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{iregexp(&quot;unable to read data from frontend&quot;)}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>{{ITEM.VALUE}.iregsub(&quot;.*unable to read data from frontend&quot;, &quot;Unable to read data from frontend&quot;)}</name>
                            <priority>INFO</priority>
                            <description>В одной из сессий PGpool-II не смог прочитать данные от фронтенда.&#13;
Если данная ошибка повторяется очень часто, то необходимо проанализировать лог-файлы и выяснить причину появления данных сообщений.&#13;
Доведите информацию эксперта, заказчику пока это не интересно.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Main processe of PGpool-II is down</name>
                                    <expression>{DBS_Template App PGpool-II:proc.num[{$DBS_PGPOOL_SERVICE_NAME},{$DBS_PGPOOL_SERVICE_USER},,&quot;{$DBS_PGPOOL_SERVICE_CMD_REGEXP}&quot;].max(5m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PGpool] Cache hit ratio, %</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[cache_hit_ratio]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <description>cache_hit_ratio means cache hit ratio, calculated from num_cache_hits/(num_cache_hits+num_selects) Anything below num_hash_entries are valid only when cache storage is on shared memory.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CACHE_HIT_RATIO</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Fragment cache entries size</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[fragment_cache_entries_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>fragment_cache_entries_size means total size of cache storage in bytes which cannot be used because of fragmentation.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.FRAGMENT_CACHE_ENTRIES_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Free cache entries size</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[free_cache_entries_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>free_cache_entries_size means total size of cache storage in bytes which is not used yet or can be usable.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.FREE_CACHE_ENTRIES_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Number of cache entries</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[num_cache_entries]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>num_cache_entries means number of valid cache entries in the cache storage and should be equal to used_hash_entries.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NUM_CACHE_ENTRIES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Number of cache hit counts</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[num_cache_hits]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>num_cache_hits means the number of SELECTs which hit cache.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NUM_CACHE_HITS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Number of hash entries</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[num_hash_entries]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>num_hash_entries means number of entries in hash table, which is used for index to cache storage and should be equal to memqcache_max_num_cache in pgpool.conf. This is the upper limit for number of cache entries.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NUM_HASH_ENTRIES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] 	Number of select counts</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[num_selects]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>num_selects means the number of SELECTs which do not hit cache.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NUM_SELECTS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Used cache entries size</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[used_cache_entries_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>used_cache_entries_size means total size of cache storage in bytes which is already used.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.USED_CACHE_ENTRIES_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Number of used hash entries</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.cache[used_hash_entries]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>used_hash_entries means number of already used entries in num_hash_entries.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.USED_HASH_ENTRIES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PGpool] Get pool_nodes</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get pool_nodes</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PGpool] Ping status</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.query.nojson[{$DBS_PGPOOL_CONN_STRING},pgpool_ping]</key>
                    <history>30d</history>
                    <description>Get connection status</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Status</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Instance ping)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>MATCHES_REGEX</type>
                            <params>^\d*$</params>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{max(5m)}=0</expression>
                            <name>PGpool-II test connection failed</name>
                            <opdata>current: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>HIGH</priority>
                            <description>Тестовое подключение к PGpool завершилось ошибкой.&#13;
Срочно доведите информацию до заказчика и эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Main processe of PGpool-II is down</name>
                                    <expression>{DBS_Template App PGpool-II:proc.num[{$DBS_PGPOOL_SERVICE_NAME},{$DBS_PGPOOL_SERVICE_USER},,&quot;{$DBS_PGPOOL_SERVICE_CMD_REGEXP}&quot;].max(5m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PGpool] Version</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.query.nojson[{$DBS_PGPOOL_CONN_STRING},pgpool_version]</key>
                    <delay>5m</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>PGpool-II version.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[PGpool] Get pool_cache</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.query.onerow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_cache]</key>
                    <delay>5m</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get pool_cache</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PGpool] Total number of main '{$DBS_PGPOOL_SERVICE_NAME}' processes</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>proc.num[{$DBS_PGPOOL_SERVICE_NAME},{$DBS_PGPOOL_SERVICE_USER},,&quot;{$DBS_PGPOOL_SERVICE_CMD_REGEXP}&quot;]</key>
                    <history>30d</history>
                    <description>The number of main pgpool processes.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Status</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(5m)}=0</expression>
                            <name>Main processe of PGpool-II is down</name>
                            <opdata>current: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>DISASTER</priority>
                            <description>Основной процесс PGpool-II остановлен или аварийно завершил работу.&#13;
Срочно доведите информацию до заказчика и эксперта.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PGpool] Total number of '{$DBS_PGPOOL_SERVICE_NAME}' processes</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>proc.num[{$DBS_PGPOOL_SERVICE_NAME},{$DBS_PGPOOL_SERVICE_USER}]</key>
                    <history>30d</history>
                    <description>The total number of pgpool processes.</description>
                    <applications>
                        <application>
                            <name>PGpool-II: Status</name>
                        </application>
                    </applications>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>PGpool node discovery</name>
                    <type>DEPENDENT</type>
                    <key>pgpool.node.discovery</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Hostname</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},hostname]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].HOSTNAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': ID</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},id]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].NODE_ID.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Last status change</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},laststatuschange]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].LAST_STATUS_CHANGE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': LB weight</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},lbweight]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].LB_WEIGHT.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Load balance node</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},loadbalancenode]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].LOAD_BALANCE_NODE.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;false&quot;:
    return 0;
    break;
  case &quot;true&quot;:
    return 1;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Port</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},port]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].PORT.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Replication delay</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},replicationdelay]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].REPLICATION_DELAY.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>5m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Role</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},role]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PGpool-II (Node role)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].ROLE.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;primary&quot;:
    return 0;
    break;
  case &quot;standby&quot;:
    return 1;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PGpool] Node '{#HOSTNAME}': Status</name>
                            <type>DEPENDENT</type>
                            <key>pgpool.node.info[{#HOSTNAME},status]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PGpool: Node '{#HOSTNAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PGpool-II (Node status)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.HOSTNAME== &quot;{#HOSTNAME}&quot;)].STATUS.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;down&quot;:
    return 0;
    break;
  case &quot;up&quot;:
    return 1;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>pgsql.query.multirow[{$DBS_PGPOOL_CONN_STRING},pgpool_show_nodes]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(node){
    return {
        &quot;{#HOSTNAME}&quot;: node.HOSTNAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>Service</tag>
                    <value>PGpool-II</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$DBS_PGPOOL_CONN_STRING}</macro>
                    <value>host = 127.0.0.1 port = 9999 dbname = postgres user=postgres password=postgres connect_timeout = 3</value>
                    <description>Connection string</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_LOGFILE}</macro>
                    <value>/var/log/pgpool/pgpool.log</value>
                    <description>Full path and log name</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_LOG_OPTIONS}</macro>
                    <value>mtime-noreread</value>
                    <description>mtime-reread or mtime-noreread, see detail https://www.zabbix.com/documentation/4.4/manual/introduction/whatsnew447</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_LOG_REGEXP}</macro>
                    <value>PANIC|FATAL|ERROR|[Ee]rror:</value>
                    <description>RegExp for errors</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_SERVICE_CMD_REGEXP}</macro>
                    <value>^.*pgpool\.conf.*$</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_SERVICE_NAME}</macro>
                    <value>pgpool</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGPOOL_SERVICE_USER}</macro>
                    <value>postgres</value>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>DBS PGpool-II (Node role)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>primary</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>standby</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PGpool-II (Node status)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>up</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Instance ping)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>ERROR</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>CONNECTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
