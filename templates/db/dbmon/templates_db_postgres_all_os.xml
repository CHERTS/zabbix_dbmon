<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2021-02-23T11:26:45Z</date>
    <groups>
        <group>
            <name>DBS.Templates/Modules</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>DBS_Template DB PostgreSQL</template>
            <name>DB PostgreSQL (Active, DBMON, for all OS)</name>
            <description>Template for monitoring PostgreSQL DB for all OS (active agent).&#13;
&#13;
This template was developed by Mikhail Grigorev for the Distributed Service company.&#13;
&#13;
Support e-mail: m.grigoriev@db-service.ru&#13;
&#13;
Version: 1.0</description>
            <groups>
                <group>
                    <name>DBS.Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>PgSQL: Autovacuum</name>
                </application>
                <application>
                    <name>PgSQL: Backup</name>
                </application>
                <application>
                    <name>PgSQL: Bgwriter</name>
                </application>
                <application>
                    <name>PgSQL: Buffercache</name>
                </application>
                <application>
                    <name>PgSQL: Checkpoint</name>
                </application>
                <application>
                    <name>PgSQL: Connections</name>
                </application>
                <application>
                    <name>PgSQL: Info</name>
                </application>
                <application>
                    <name>PgSQL: Performance</name>
                </application>
                <application>
                    <name>PgSQL: Replication</name>
                </application>
                <application>
                    <name>PgSQL: Statistic</name>
                </application>
                <application>
                    <name>PgSQL: Throughput</name>
                </application>
                <application>
                    <name>PgSQL: Transactions</name>
                </application>
                <application>
                    <name>PgSQL: Variables</name>
                </application>
                <application>
                    <name>PgSQL: WAL</name>
                </application>
                <application>
                    <name>stubs</name>
                </application>
                <application>
                    <name>Zabbix agent (DBMON)</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>[DBMON] Host name of zabbix_agentd running ({$DBS_PGSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.hostname[{$DBS_PGSQL_INSTANCE}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[DBMON] Agent ping ({$DBS_PGSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}]</key>
                    <history>30d</history>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Zabbix agent ping status</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                            <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                            <priority>HIGH</priority>
                            <description>Не приходят данные об активности zabbix-agent для мониторинга базы данных более {$DBS_DBMON_AGENTD_NODATA_CRIT} (минут).&#13;
Возможные причины:&#13;
1. Потеряна связь zabbix-agent-dbmon с нашим zabbix-proxy;&#13;
2. Zabbix-agent-dbmon на сервере заказчика остановлен;&#13;
3. Проблемы на сервере заказчика (сервер завис, перезагружен, умер или еще что-то);&#13;
&#13;
Срочно проверить доступность сервера заказчика, далее проверить работу zabbix-agent-dbmon.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Service</tag>
                                    <value>zabbix-agent-dbmon</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                            <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                            <priority>WARNING</priority>
                            <description>Не приходят данные об активности zabbix-agent для мониторинга базы данных более {$DBS_DBMON_AGENTD_NODATA_WARN} (минут).&#13;
Возможные причины:&#13;
1. Потеряна связь zabbix-agent-dbmon с нашим zabbix-proxy;&#13;
2. Zabbix-agent-dbmon на сервере заказчика остановлен;&#13;
3. Проблемы на сервере заказчика (сервер завис, перезагружен, умер или еще что-то);&#13;
&#13;
Срочно проверить доступность сервера заказчика, далее проверить работу zabbix-agent-dbmon.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Service</tag>
                                    <value>zabbix-agent-dbmon</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[DBMON] Version of zabbix_agent(d) running ({$DBS_PGSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.version[{$DBS_PGSQL_INSTANCE}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get archive count stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.archive.count[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by pg_stat_archiver</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get archive size stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.archive.size[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by archive size status</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Successfully archived</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},archived_count]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of WAL files that have been successfully archived (relation pg_stat_archiver).&#13;
Число файлов WAL, которые были успешно архивированы (представление pg_stat_archiver).</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.archived_count</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.archive.count[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Number of WAL file that ready to archive</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},count_files]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of WAL file that ready to archive.</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.count_files</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.archive.size[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(10m)}&gt;{$DBS_PGSQL_MAX_ARCHIVED_CNT_WARN}</expression>
                            <name>Number of WAL file that ready to archive is to high</name>
                            <opdata>current: {ITEM.LASTVALUE}, threshold: {$DBS_PGSQL_MAX_ARCHIVED_CNT_WARN}, alert started: {ITEM.VALUE}</opdata>
                            <priority>AVERAGE</priority>
                            <description>Количество сегментов WAL в каталоге для архивации превышает {$DBS_PGSQL_MAX_ARCHIVED_CNT_WARN} штуки.&#13;
Возможно нарушена работа архивации сегментов WAL и они накапливаются в каталоге '&lt;pg_datadir&gt;pg_wal/archive_status'&#13;
При интенсивной генерации сегментов WAL нарушение архивации может спровоцировать заполнение диска и остановку работы СУБД.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Failed attempts for archiving</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},failed_count]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of failed attempts for archiving WAL files (relation pg_stat_archiver).&#13;
Число неудачных попыток архивации файлов WAL (представление pg_stat_archiver).</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.failed_count</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>2m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.archive.count[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <name>Failed attempts for archiving too high</name>
                            <opdata>current: {ITEM.LASTVALUE1}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>Сбой при архивации журналов WAL.&#13;
Срочно доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Size of WAL files that ready to archive</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},size_files]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Size of WAL files that ready to archive.</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.size_files</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.archive.size[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' autovacuum: Count of autovacuum workers</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.autovacuum.count[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <description>Count number of autovacuum workers.&#13;
Количество процессов autovacuum в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Autovacuum</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get exclusive backup stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.backup.exclusive[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by exclusive backup stat.</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Duration of exclusive backup</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},backup_duration]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>Duration of exclusive backup.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Backup</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.backupduration</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Duration of backup not supported.</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.backup.exclusive[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Start time of exclusive backup</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},backup_start_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>unixtime</units>
                    <description>Startup time of exclusive backup.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Backup</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.backupstarttime</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.backup.exclusive[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Exclusive backup is running</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},is_in_backup]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Exclusive backup is running (0 - Stopped, 1 - Running).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Backup</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Exclusive backup status)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.isinbackup</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.backup.exclusive[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get bgwriter stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect pg_stat_bgwriter.&#13;
See more info: https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-BGWRITER-VIEW</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' bgwriter: Buffers allocated</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_alloc]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of buffers allocated.&#13;
Количество выделенных буферов.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.buffers_alloc</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' bgwriter: Buffers written directly by a backend</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_backend]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of buffers written directly by a backend.&#13;
Количество буферов, записанных самим серверным процессом.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.buffers_backend</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' bgwriter: Times a backend execute its own fsync</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_backend_fsync]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of times a backend had to execute its own fsync call (normally the background writer handles those even when the backend does its own write).&#13;
Сколько раз серверному процессу пришлось выполнить fsync самостоятельно (обычно фоновый процесс записи сам обрабатывает эти вызовы, даже когда серверный процесс выполняет запись самостоятельно)</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.buffers_backend_fsync</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Buffers checkpoints written</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_checkpoint]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of buffers written during checkpoints.&#13;
Количество буферов, записанных при выполнении контрольных точек.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.buffers_checkpoint</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Buffers background written</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_clean]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of buffers written by the background writer.&#13;
Количество буферов, записанных фоновым процессом записи.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.buffers_clean</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Requested</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoints_req]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of requested (max_wal_size) checkpoints that have been performed.&#13;
Количество запрошенных контрольных точек по требованию (max_wal_size), которые уже были выполнены.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoints_req</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: By timeout</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoints_timed]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of scheduled (checkpoint_timeout) checkpoints that have been performed.&#13;
Количество запланированных по расписанию (checkpoint_timeout) контрольных точек, которые уже были выполнены.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoints_timed</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Sync time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoint_sync_time_in_sec]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in milliseconds.&#13;
Общее время, которое было затрачено на этап обработки контрольной точки, в котором файлы синхронизируются с диском, в миллисекундах.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoint_sync_time</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Write time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoint_write_time_in_sec]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in milliseconds.&#13;
Общее время, которое было затрачено на этап обработки контрольной точки, в котором файлы записываются на диск, в миллисекундах.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoint_write_time</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' bgwriter: Number of bgwriter stopped</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},maxwritten_clean]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of times the background writer stopped a cleaning scan because it had written too many buffers.&#13;
Сколько раз фоновый процесс записи останавливал сброс грязных страниц на диск из-за того, что записал слишком много буферов.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.maxwritten_clean</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Stats reset time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},stats_reset_unix]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>unixtime</units>
                    <description>Последнее время сброса этих статистических данных.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Bgwriter</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.stats_reset_unix</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get buffercache stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>30m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by pg_buffercache values in a single call.</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' buffercache: Clear</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},clear]</key>
                    <delay>0</delay>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>PgSQL: Buffercache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.clear</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' buffercache: Dirty</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},dirty]</key>
                    <delay>0</delay>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>PgSQL: Buffercache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.dirty</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' buffercache: Popular</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},popular]</key>
                    <delay>0</delay>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>PgSQL: Buffercache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.popular</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' buffercache: Total</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},total]</key>
                    <delay>0</delay>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>PgSQL: Buffercache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' buffercache: Used</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},used]</key>
                    <delay>0</delay>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>PgSQL: Buffercache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.used</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.buffercache[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Cache hit</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.cache.hit[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <applications>
                        <application>
                            <name>PgSQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get checkpoint stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Calculate checkpoint stat via pg_stat_bgwriter.</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Checkpoint size</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},avg_checkpoint_write]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <description>Checkpoint size (bytes).&#13;
Сколько данных записывает средняя контрольная точка (байт).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.avg_checkpoint_write</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Backend write, %</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},backend_write_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.backend_write_pct</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Forced checkpoint ratio, %</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},checkpoints_req_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <description>Какой процент времени запрашиваются контрольные точки на основе активности, а не времени прохождения.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoints_req_pct</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Checkpoint write, %</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},checkpoint_write_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checkpoint_write_pct</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Time between checkpoints</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},second_between_checkpoints]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>Time between checkpoints.&#13;
Сколько прошло времени между контрольными точками.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.second_between_checkpoints</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' checkpoint: Total write</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.checkpoint[{$DBS_PGSQL_INSTANCE},total_written]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Total write (bytes).&#13;
Всего записано (байт).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Checkpoint</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_written</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.checkpoint[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get connections stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect all metrics from pg_stat_activity&#13;
See more info: https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get database info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>10m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get all database info</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get database locks</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect all metrics from pg_locks per database&#13;
See more info: https://www.postgresql.org/docs/current/explicit-locking.html#LOCKING-TABLES</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get database stat sum</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect pg_stat_database.&#13;
See more info: https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-DATABASE-VIEW</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get database stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect all metrics from pg_stat_database per database&#13;
See more info: https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-DATABASE-VIEW</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' connections: Active</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},active]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of connections executing a query</description>
                    <applications>
                        <application>
                            <name>PgSQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' connections: Idle</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},idle]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of connections waiting for a new client command</description>
                    <applications>
                        <application>
                            <name>PgSQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.idle</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' connections: Idle in transaction</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},idle_in_transaction]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of connections in a transaction state, but not executing a query</description>
                    <applications>
                        <application>
                            <name>PgSQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.idle_in_transaction</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' connections: Total</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},total]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of connections</description>
                    <applications>
                        <application>
                            <name>PgSQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' connections: Total %</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},total_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>%</units>
                    <description>Total number of connections in percentage</description>
                    <applications>
                        <application>
                            <name>PgSQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_pct</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.connections[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Hit blocks read</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},blks_hit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of times disk blocks were found already in the buffer cache.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.blks_hit</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Disk blocks read</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},blks_read]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of disk blocks read.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.blks_read</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Blocks read time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},blk_read_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Time spent reading data file blocks by backends, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.blk_read_time</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Blocks write time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},blk_write_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Time spent writing data file blocks by backends, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.blk_write_time</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Checksum failures</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},checksum_failures]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of data page checksum failures detected (or on a shared object), or NULL if data checksums are not enabled. This metric included in PostgreSQL 12</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.checksum_failures</params>
                        </step>
                        <step>
                            <type>MATCHES_REGEX</type>
                            <params>^\d*$</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>-1</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Conflicts</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},conflicts]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of queries canceled due to conflicts with recovery (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details)</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.conflicts</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Deadlocks</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},deadlocks]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of deadlocks detected.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.deadlocks</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Number temp bytes</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},temp_bytes]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>b</units>
                    <description>Total amount of data written to temporary files by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.temp_bytes</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Number temp files</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},temp_files]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of temporary files created by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.temp_files</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Rows deleted</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_deleted]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of rows deleted by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.tup_deleted</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Rows fetched</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_fetched]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of rows fetched by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.tup_fetched</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Rows inserted</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_inserted]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of rows inserted by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.tup_inserted</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Rows returned</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_returned]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of rows returned by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.tup_returned</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Rows updated</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_updated]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of rows updated by queries.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.tup_updated</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Committed transactions</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},xact_commit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of transactions that have been committed.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.xact_commit</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' statistic: Roll backed transactions</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},xact_rollback]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of transactions that have been rolled back.&#13;
Количество транзакций в этой базе данных, для которых был выполнен откат транзакции.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Statistic</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.xact_rollback</params>
                        </step>
                        <step>
                            <type>SIMPLE_CHANGE</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.db.stat.sum[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(2m)}&gt;{$DBS_PGSQL_ROLLBACK_MAX_WARN}</expression>
                            <name>Number of rollbacked transaction is too high</name>
                            <opdata>current: {ITEM.LASTVALUE}, threshold: {$DBS_PGSQL_ROLLBACK_MAX_WARN}, alert started: {ITEM.VALUE}</opdata>
                            <priority>WARNING</priority>
                            <description>Количество транзакций, для которых был выполнен откат транзакции, а так же возможных ошибок в работе СУБД за последние 2 минуты превышает {$DBS_PGSQL_ROLLBACK_MAX_WARN} штук.&#13;
Данный показатель показывает не только количество откатов транзакции, но и говорит о количестве ошибок возникающих в СУБД.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of prepared transactions</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.prepared.transactions[{$DBS_PGSQL_INSTANCE},count_prepared]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of prepared transactions.&#13;
See pg_prepared_xacts for details.&#13;
&#13;
Общее количество транзакции, подготовленных для двухфазной фиксации.&#13;
Смотрите представления pg_prepared_xacts для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.count_prepared</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.prepared.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Oldest prepared transaction time in sec</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.prepared.transactions[{$DBS_PGSQL_INSTANCE},oldest_prepared]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>Oldest prepared transaction time in second.&#13;
See pg_prepared_xacts for details.&#13;
&#13;
Возраст самой долгой транзакции, подготовленной для двухфазной фиксации (в секундах).&#13;
Смотрите представления pg_prepared_xacts для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.oldest_prepared</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.prepared.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;{$DBS_PGSQL_MAX_PREPARED_TIME_WARN}</expression>
                            <name>Prepared transaction is too old</name>
                            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_PREPARED_TIME_WARN}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Возрастом самой старой подготовленной транзакции слишком велик.&#13;
Слишком долго &quot;висящая&quot; подготовленная транзакция может не давать работать процессу vacuum.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max transaction time in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max transaction time in 'active' state exclude autovacuum processes (in second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания транзакции в состоянии 'active' исключая процессы autovacuum (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_MAX_ACTIVE_TIME_WARN}</expression>
                            <name>Transaction in 'active' state is too long</name>
                            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_ACTIVE_TIME_WARN}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Зафиксирована долго выполняющаяся транзакция в состоянии 'active'.&#13;
Долго выполняющиеся транзакции могут стать причиной повышенной нагрузки на CPU, а так же привести к повышенной генерации журналов WAL, что может привести к деградации производительности.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max insert transaction time in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active_insert]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max insert transaction time in 'active' state (second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания insert транзакции в состоянии 'active' (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active_insert</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max select transaction time in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active_select]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max select transaction time in 'active' state (second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания select транзакции в состоянии 'active' (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active_select</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max update transaction time in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active_update]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max update transaction time in 'active' state (second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания update транзакции в состоянии 'active' (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active_update</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max time of autovacuum</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},autovacuum]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max time of autovacuum processes (in second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время работы процессов autovacuum (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Autovacuum</name>
                        </application>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.autovacuum</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_MAX_AUTOVACUUM_TIME_WARN}</expression>
                            <name>Autovacuum worker is too long</name>
                            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_AUTOVACUUM_TIME_WARN}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Процесс autovacuum работает слишком долго.&#13;
Сообщите данные эксперту для анализа.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'disabled' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},disabled_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Общее количество транзакций в состоянии 'disabled'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.disabled_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'fastpath function call' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},fastpath_function_call_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество транзакций в состоянии 'fastpath function call'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.fastpath_function_call_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max transaction time in 'idle' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},idle]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max transaction time in 'idle' state (second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания транзакции в состоянии 'idle' (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.idle</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_MAX_IDLE_TIME_WARN}</expression>
                            <name>Transaction in 'idle' state is too long</name>
                            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_IDLE_TIME_WARN}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Зафиксирована долго выполняющаяся транзакция в состоянии 'idle'.&#13;
Сообщите данные эксперту для анализа.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' : Current max transaction time in 'idle in transaction' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},idle_in_transaction]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max transaction time in 'idle in transaction' state (second).&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания транзакции в состоянии 'idle in transaction' (в секундах).&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.idle_in_transaction</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_MAX_IDLE_IN_TRANSACTION_TIME_WARN}</expression>
                            <name>Transaction in 'idle in transaction' state is too long</name>
                            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_IDLE_IN_TRANSACTION_TIME_WARN}, alert started: {ITEM.VALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Зафиксирована долго выполняющаяся транзакция в состоянии 'idle in transaction'.&#13;
Приложение начало транзакцию, ничего не делает, но и транзакцию не завершает.&#13;
Долго висящие транзакции в состоянии 'idle in transaction' могут стать причиной блокировки процесса VACUUM, что в последствии приведет к разбуханию таблиц и индексов и деградации производительности.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'idle in transaction (aborted)' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},idle_in_transaction_aborted_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество транзакций в состоянии 'idle in transaction (aborted)'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.idle_in_transaction_aborted_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Maximum of connections</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},max_connections]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Maximum number of connections (max_connections settings).&#13;
Максимальное количество соединений (настройка max_connections).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.max_connections</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max transaction time in 'prepared' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},prepared]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max prepared transaction time in second.&#13;
See pg_prepared_xacts for details.&#13;
&#13;
Текущее максимальное время ожидания транзакции подготовленной для двухфазной фиксации.&#13;
Смотрите представления pg_prepared_xacts для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.prepared</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of autovacuum in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_active_autovacuum_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество процессов autovacuum в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Autovacuum</name>
                        </application>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_active_autovacuum_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_active_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Общее количество транзакций в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_active_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_ACTIVE_WARN}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{min(10m)}&lt;={$DBS_PGSQL_ACTIVE_WARN}</recovery_expression>
                            <name>Too many connection in 'active' state</name>
                            <opdata>current: {ITEM.LASTVALUE}, threshold: {$DBS_PGSQL_ACTIVE_WARN}, alert started: {ITEM.VALUE}</opdata>
                            <priority>WARNING</priority>
                            <description>Очень много соединений в состоянии 'active' (воркеры autovacuum не учитываются).&#13;
Возможна деградация производительности.&#13;
Используйте типовой запрос:&#13;
SELECT * FROM pg_stat_activity WHERE state='active';&#13;
для получения списка активных соединений.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of insert transaction in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_active_insert_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество insert транзакций в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_active_insert_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of select transaction in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_active_select_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество select транзакций в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_active_select_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of update transaction in 'active' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_active_update_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество update транзакций в состоянии 'active'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_active_update_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Total number of connections</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_connection]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of connections.&#13;
Общее количество соединений.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_connection</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'idle' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_idle_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Общее количество транзакций в состоянии 'idle'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_idle_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of transaction in 'idle in transaction' state</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_idle_in_transaction_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Количество транзакций в состоянии 'idle in transaction'.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_idle_in_transaction_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_PGSQL_IDLE_IN_TRANSACTION_WARN}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{min(10m)}&lt;={$DBS_PGSQL_IDLE_IN_TRANSACTION_WARN}</recovery_expression>
                            <name>Too many connection in 'idle in transaction' state</name>
                            <opdata>current: {ITEM.LASTVALUE}, threshold: {$DBS_PGSQL_IDLE_IN_TRANSACTION_WARN}, alert started: {ITEM.VALUE}</opdata>
                            <priority>WARNING</priority>
                            <description>Очень много соединений в состоянии 'idle in transaction'.&#13;
Приложение начало транзакцию, ничего не делает, но и транзакцию не завершает.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Total number of connections, %</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>percent</units>
                    <description>Total number of connections in percentage.&#13;
Общее количество соединений в процентах от максимального.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_pct</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Number of prepared transactions</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_prepared_cnt]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of prepared transactions.&#13;
See pg_prepared_xacts for details.&#13;
&#13;
Общее количество транзакции, подготовленных для двухфазной фиксации.&#13;
Смотрите представления pg_prepared_xacts для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_prepared_cnt</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Current max waiting transaction time in sec</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},waiting]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Current max waiting transaction time in second.&#13;
See pg_stat_activity for details.&#13;
&#13;
Текущее максимальное время ожидания транзакции у которой в колонке wait_event (Имя ожидаемого события, если обслуживающий процесс находится в состоянии ожидания) отличное от NULL значение.&#13;
Смотрите представления pg_stat_activity для детализации.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Transactions</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.waiting</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Startup time</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance[{$DBS_PGSQL_INSTANCE},startup_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>unixtime</units>
                    <description>The time at which PostgreSQL was started.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.STARTUPTIME</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.server.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Uptime</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance[{$DBS_PGSQL_INSTANCE},uptime]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>uptime</units>
                    <description>The number of seconds that the server has been up.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.UPTIME</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.server.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{change()}&lt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Instance '{$DBS_PGSQL_INSTANCE}' has just been restarted</name>
                            <opdata>current uptime: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>DISASTER</priority>
                            <description>Процесс (сервис) postgres был перезапущен.&#13;
Необходимо проверить факт перезапуска на сервере заказчика, проверить логи (postgres.log), далее уточнить в чате кто произвел перезапуск.&#13;
Возможно, что перезапуск произошел в результате краха процесса в автоматическом режиме.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Version full</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.instance[{$DBS_PGSQL_INSTANCE},version_full]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Full PostgreSQL version information (number and vendor).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.VERSION</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.server.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Age of oldest xid</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.oldest.xid[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>3d</history>
                    <value_type>FLOAT</value_type>
                    <description>Returns age of oldest xid.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;18000000</expression>
                            <name>Age of oldest xid is too big</name>
                            <opdata>current: {ITEM.LASTVALUE}, threshold: 18000000, alert started: {ITEM.VALUE}</opdata>
                            <priority>DISASTER</priority>
                            <description>Возраст самого старого XID слишком велик.&#13;
Возможно близка ситуация зацикливания счетчика транзакций (см. https://postgrespro.ru/docs/postgresql/12/routine-vacuuming#VACUUM-FOR-WRAPAROUND)&#13;
Срочно найдите долго выполняющуюся транзакцию висящую в состоянии 'idle in transaction' и завершите ее.&#13;
Доведите информацию до эксперта и заказчика.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Ping</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.ping[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>30d</history>
                    <description>Test connection with an instance of PostgreSQL.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Instance ping)</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{nodata({$DBS_PGSQL_PING_NODATA_CRIT})}=1</expression>
                            <name>Database test connection data not received for more than {$DBS_PGSQL_PING_NODATA_CRIT} (minutes)</name>
                            <priority>HIGH</priority>
                            <description>Данные о доступности экземпляра БД PostgreSQL не поступали более {$DBS_PGSQL_PING_NODATA_CRIT} (минут).&#13;
Необходимо проверить работу экземпляра БД, далее проверить работу и настройки zabbix-agent.&#13;
Сообщить о проблеме эксперту в  соответствующий чат.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{nodata({$DBS_PGSQL_PING_NODATA_WARN})}=1</expression>
                            <name>Database test connection data not received for more than {$DBS_PGSQL_PING_NODATA_WARN} (minutes)</name>
                            <priority>WARNING</priority>
                            <description>Данные о доступности экземпляра БД PostgreSQL не поступали более {$DBS_PGSQL_PING_NODATA_WARN} (минут).&#13;
Необходимо проверить работу экземпляра БД, далее проверить работу и настройки zabbix-agent-dbmon.&#13;
Сообщить о проблеме эксперту в соответствующий чат.</description>
                            <dependencies>
                                <dependency>
                                    <name>Database test connection data not received for more than {$DBS_PGSQL_PING_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].nodata({$DBS_PGSQL_PING_NODATA_CRIT})}=1</expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{max(#2)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{min(#2)}=1</recovery_expression>
                            <name>Instance access failed</name>
                            <priority>DISASTER</priority>
                            <description>Тестовое подключение к экземпляру БД PostgreSQL не успешно.&#13;
Необходимо проверить работу экземпляра БД, проверьте postgres.log на предмет ошибок.&#13;
Далее проверьте работу и настройки zabbix-agent.&#13;
Проверьте лог-файл zabbix-agent на предмет ошибок подключения к БД.</description>
                            <dependencies>
                                <dependency>
                                    <name>Database test connection data not received for more than {$DBS_PGSQL_PING_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].nodata({$DBS_PGSQL_PING_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get prepared transactions</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.prepared.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by prepared transactions.</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication standby count</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.count[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <description>Replication standby count.&#13;
Количество подчиненных (standby) серверов.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Number of standby servers has been changed</name>
                            <opdata>current: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <status>DISABLED</status>
                            <priority>WARNING</priority>
                            <description>Аларм означает, что у текущего главного сервера (master) изменилось количество подчиненных серверов (standby).&#13;
Проверьте какие новые реплики были добавлены или удалены, доведите информацию до эксперта.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{change()}&lt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Number of standby servers has been decrease</name>
                            <opdata>current: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>AVERAGE</priority>
                            <description>Аларм означает, что у текущего главного сервера (master) уменьшилось количество подчиненных серверов (standby).&#13;
Проверьте работоспособность реплики которые выбыли из процесса потоковой репликации, доведите информацию до заказчика и эксперта.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{change()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Number of standby servers has been increase</name>
                            <opdata>current: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>INFO</priority>
                            <description>Аларм означает, что у текущего главного сервера (master) увеличилось количество подчиненных серверов (standby).&#13;
Проверьте какие новые реплики были добавлены, доведите информацию до эксперта.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get replication stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get replication stat (client_addr, usename, application_name, lag and etc)</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication lag in byte on standby server</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.lag_byte[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Replication lag in byte on standby server.&#13;
Лаг репликации в байтах на подчиненном сервере.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication lag in seconds on standby server</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.lag_sec[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>Replication lag in seconds on standby server.&#13;
Лаг репликации в секундах на подчиненном сервере.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication replay paused</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.replay[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <description>Replay paused (0 - No, 1 - Paused, 2 - Master, 3 - Not supported).&#13;
Режим восстановления на паузе? (0 - Нет, 1- На паузе, 2 - Главный сервер, 3 - Не поддерживается в этой версии Pg).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Replay paused)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6m</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication recovery role</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.role[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <description>Streaming replication recovery role (0 - Master, 1 - Standby).&#13;
Роль сервера в режиме репликации (0 - Главный, 1 - Подчиненный).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Replication recovery role)</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Recovery role has been changed</name>
                            <opdata>current role: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE}</opdata>
                            <priority>INFO</priority>
                            <description>Аларм означает, что произошло изменение роли сервера участвующего в потоковой репликации (сервер стал мастером или репликой).&#13;
Доведите информацию до эксперта.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get replication slots stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.slots[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get replication slots stat</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Replication status</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.replication.status[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>2m</delay>
                    <history>30d</history>
                    <description>Replication status (0 - Down, 1 - Up, 2 - Master, 3 - Not supported).&#13;
Статус репликации (0 - Не работает, 1- Работает, 2 - Главный сервер, 3 - Не поддерживается в этой версии Pg).</description>
                    <applications>
                        <application>
                            <name>PgSQL: Replication</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS PostgreSQL (Replication status)</name>
                    </valuemap>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get server info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.server.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get transactions stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.transactions[{$DBS_PGSQL_CONN_STRING}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by transaction execution time</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Version</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.version[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Version of PostgreSQL instance.</description>
                    <applications>
                        <application>
                            <name>PgSQL: Info</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Version of PostgreSQL has been changed</name>
                            <opdata>current: {ITEM.VALUE}</opdata>
                            <priority>INFO</priority>
                            <description>Версия экземпляра PostgreSQL была изменена.&#13;
Необходимо проверить факт изменения версии, выяснить причину изменения версии (плановый апгрейд и т.п.), передать данные эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_PGSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}': Get WAL stat</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>pgsql.wal.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collect metrics by WAL stat</description>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Total number of WAL files</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.wal[{$DBS_PGSQL_INSTANCE},count]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Total number of WAL files on disk.&#13;
Общее текущее количество файлов WAL на диске.</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.count</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.wal.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Total size of WAL files</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.wal[{$DBS_PGSQL_INSTANCE},total_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Total size WAL files in pg_wal directory.</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_size</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.wal.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[PgSQL] Instance '{$DBS_PGSQL_INSTANCE}' WAL stat: Total write</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.wal[{$DBS_PGSQL_INSTANCE},write]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Total bytes written to WAL files since instantiation cluster.</description>
                    <applications>
                        <application>
                            <name>PgSQL: WAL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.write</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>pgsql.wal.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>PgSQL database discovery</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.database.discovery[{$DBS_PGSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DBNAME}</macro>
                                <value>{$DBS_PGSQL_LLD_FILTER_DB_NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DBNAME}</macro>
                                <value>{$DBS_PGSQL_LLD_FILTER_DB_MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Age</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},age]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>All transaction IDs before this one have been replaced with a permanent (&quot;frozen&quot;) transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].AGE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;={$DBS_PGSQL_XID_WARN:&quot;{#DBNAME}&quot;}</expression>
                                    <name>Age of oldest xid is too high</name>
                                    <opdata>current age: {ITEM.LASTVALUE}, max: 4294967295, threshold: {$DBS_PGSQL_XID_WARN:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Возраст самой старой транзакции в базе '{#DBNAME}' приближается к 2^31 (пол-круга, половина от всех допустимых значений).&#13;
Срочно доведите информацию до эксперта.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Age of oldest xid is too very high</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.db.info[{#DBNAME},age].last()}&gt;={$DBS_PGSQL_XID_CRIT:&quot;{#DBNAME}&quot;}</expression>
                                        </dependency>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_PGSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}&gt;={$DBS_PGSQL_XID_CRIT:&quot;{#DBNAME}&quot;}</expression>
                                    <name>Age of oldest xid is too very high</name>
                                    <opdata>current age: {ITEM.LASTVALUE}, max: 4294967295, threshold: {$DBS_PGSQL_XID_CRIT:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE}</opdata>
                                    <priority>HIGH</priority>
                                    <description>Возраст самой старой транзакции в базе '{#DBNAME}' приближается к 2^31 (пол-круга, половина от всех допустимых значений).&#13;
Срочно доведите информацию до эксперта.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_PGSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Connection limit</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},datconnlimit]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].CONNLIM.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>-1</params>
                                    <error_handler>CUSTOM_ERROR</error_handler>
                                    <error_handler_params>Connection unlimited</error_handler_params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Database size</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},dbsize]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DBSIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{nodata({$DBS_PGSQL_DB_NODATA_WARN:&quot;{#DBNAME}&quot;})}=1</expression>
                                    <name>Database '{#DBNAME}' is not available</name>
                                    <priority>WARNING</priority>
                                    <description>Данные о состоянии базы данных '{#DBNAME}' не поступали более {$DBS_PGSQL_DB_NODATA_WARN:&quot;{#DBNAME}&quot;}.&#13;
Проверьте наличие базы данных, возможно она была удалена.&#13;
Так же проверьте работу zabbix-agent, возможно есть проблемы в его работе.&#13;
Передайте данные эксперту.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_PGSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Description</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},description]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Database description.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DESCRIPTION.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Encoding</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},encoding]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Character encoding for this database.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].ENCODING.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': LC collate</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},lc_collate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>LC_COLLATE for this database.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].LC_COLLATE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': LC ctype</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},lc_ctype]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>LC_CTYPE for this database.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].LC_CTYPE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': OID</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},oid]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Row identifier (hidden attribute; must be explicitly selected).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].OID.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Owner</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},owner]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Owner of the database, usually the user who created it.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].OWNER.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tablespace</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.info[{#DBNAME},tablespace]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Tablespace name.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].TABLESPACE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of accessexclusive locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},accessexclusive]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of accessexclusive locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].accessexclusive</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of accessshare locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},accessshare]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of accessshare locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].accessshare</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of exclusive locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},exclusive]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of exclusive locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].exclusive</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of rowexclusive locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},rowexclusive]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of rowexclusive locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].rowexclusive</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of rowshare locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},rowshare]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of rowshare locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].rowshare</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of sharerowexclusive locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},sharerowexclusive]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of total sharerowexclusive for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].sharerowexclusive</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of shareupdateexclusive locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},shareupdateexclusive]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of shareupdateexclusive locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].shareupdateexclusive</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of share locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},share]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of share locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].share</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Num of total locks</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.locks[{#DBNAME},total]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of total locks for each database</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].total</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.locks[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Blocks hit per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},blks_hit.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of times disk blocks were found already in the buffer cache, so that a read was not necessary.&#13;
Сколько раз дисковые блоки обнаруживались в буферном кеше, так что чтение с диска не потребовалось (в значение входят только случаи обнаружения в буферном кеше PostgreSQL, а не в кеше файловой системы ОС).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].blks_hit</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Total number of disk blocks read</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},blks_read.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of disk blocks read in this database.&#13;
Количество прочитанных дисковых блоков в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].blks_read</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Disk blocks read per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},blk_read_time.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time spent reading data file blocks by backends, in milliseconds.&#13;
Время, затраченное серверными процессами в этой базе данных, на чтение блоков из файлов данных, в миллисекундах.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].blk_read_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Disk blocks write per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},blk_write_time.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time spent writing data file blocks by backends, in milliseconds.&#13;
Время, затраченное серверными процессами в этой базе данных, на запись блоков в файлы данных, в миллисекундах.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].blk_write_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Checksum failures</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},checksum_failures.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Number of data page checksum failures detected in this database.&#13;
Количество ошибок контрольных сумм в страницах данных этой базы (или общего объекта) либо NULL, если контрольные суммы не проверяются.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].checksum_failures</params>
                                </step>
                                <step>
                                    <type>MATCHES_REGEX</type>
                                    <params>^\d*$</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>ZBX_NOTSUPPORTED: Checksum failures metric is supported only in PostgreSQL 12 or higher.</error_handler_params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Detected conflicts per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},conflicts.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of queries canceled due to conflicts with recovery in this database.&#13;
Количество запросов, отменённых из-за конфликта с восстановлением в этой базе данных. (Конфликты происходят только на ведомых серверах; более подробно смотрите pg_stat_database_conflicts)</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].conflicts</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$DBS_PGSQL_CONFLICTS_MAX_WARN:&quot;{#DBNAME}&quot;}</expression>
                                    <name>Too many recovery conflicts over last 5 minutes</name>
                                    <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_CONFLICTS_MAX_WARN:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Количество запросов, отменённых из-за конфликта с восстановлением в базе '{#DBNAME}' больше {$DBS_PGSQL_CONFLICTS_MAX_WARN:&quot;{#DBNAME}&quot;}.&#13;
Конфликты происходят только на ведомых серверах, для получения более подробной информации смотрите представление pg_stat_database_conflicts.&#13;
Более подробно в официальной документации: &#13;
https://www.postgresql.org/docs/current/hot-standby.html#HOT-STANDBY-CONFLICT&#13;
https://postgrespro.ru/docs/postgresql/current/monitoring-stats#PG-STAT-DATABASE-CONFLICTS-VIEW&#13;
https://pgpedia.info/p/pg_stat_database_conflicts.html</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_PGSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Detected deadlocks per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},deadlocks.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of detected deadlocks in this database.&#13;
Количество взаимных блокировок, зафиксированное в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].deadlocks</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$DBS_PGSQL_DEADLOCKS_MAX_WARN:&quot;{#DBNAME}&quot;}</expression>
                                    <name>Deadlock has been occurred over last 5 minutes</name>
                                    <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_DEADLOCKS_MAX_WARN:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>За последние 5 минут была обнаружена взаимная блокировка.&#13;
Проверьте лог-файл на наличие дополнительной информации о взаимной блокировке.&#13;
Доведите информацию до эксперта.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_PGSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Backends connected</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},numbackends]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Number of backends currently connected to this database.&#13;
Количество серверных процессов, в настоящее время подключённых к этой базе данных. Это единственный столбец в представлении pg_stat_database, значение в котором отражает текущее состояние; все другие столбцы возвращают суммарные значения со времени последнего сброса статистики.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].numbackends</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Temp_bytes written per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},temp_bytes.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>Total amount of data written to temporary files by queries in this database.&#13;
Общий объём данных, записанных во временные файлы запросами в этой базе данных. Учитываются все временные файлы, вне зависимости от того, по какой причине они созданы и вне зависимости от значения log_temp_files.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].temp_bytes</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Temp_files created per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},temp_files.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Total number of temporary files created by queries in this database.&#13;
Количество временных файлов, созданных запросами в этой базе данных. Подсчитываются все временные файлы независимо от причины их создания (например, для сортировки или для хеширования) и независимо от установленного значения log_temp_files</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].temp_files</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples deleted per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},tup_deleted.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of rows deleted by queries in this database.&#13;
Количество строк, удалённое запросами в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].tup_deleted</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples fetched per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},tup_fetched.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of rows fetched by queries in this database.&#13;
Количество строк, извлечённое запросами в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].tup_fetched</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples inserted per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},tup_inserted.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of rows inserted by queries in this database.&#13;
Количество строк, вставленное запросами в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].tup_inserted</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples returned per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},tup_returned.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of rows returned by queries in this database.&#13;
Количество строк, возвращённое запросами в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].tup_returned</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples updated per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},tup_updated.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of rows updated by queries in this database.&#13;
Количество строк, изменённое запросами в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].tup_updated</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Commits per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},xact_commit.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Number of transactions in this database that have been committed.&#13;
Количество зафиксированных транзакций в этой базе данных.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].xact_commit</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Rollbacks per second</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.db.stat[{#DBNAME},xact_rollback.rate]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <description>Total number of transactions in this database that have been rolled back.&#13;
Количество транзакций в этой базе данных, для которых был выполнен откат транзакции.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$['{#DBNAME}'].xact_rollback</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>30m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.db.stat[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Block hit/read</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>66BB6A</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},blks_hit.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>42A5F5</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},blks_read.rate]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Block read/write rate</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},blk_read_time.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},blk_write_time.rate]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Events</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},xact_commit.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},conflicts.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},deadlocks.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},xact_rollback.rate]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Locks</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>F230E0</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},accessexclusive]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},accessshare]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},exclusive]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},rowexclusive]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},rowshare]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>6</sortorder>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},share]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>7</sortorder>
                                    <color>AC8C14</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},sharerowexclusive]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>8</sortorder>
                                    <color>611F27</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},shareupdateexclusive]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>9</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.locks[{#DBNAME},total]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Size</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>66BB6A</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.info[{#DBNAME},dbsize]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Temp files</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>66BB6A</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},temp_bytes.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>42A5F5</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},temp_files.rate]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>[PgSQL] Database '{#DBNAME}': Tuples</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},tup_deleted.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},tup_fetched.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},tup_inserted.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},tup_returned.rate]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>DBS_Template DB PostgreSQL</host>
                                        <key>pgsql.db.stat[{#DBNAME},tup_updated.rate]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>pgsql.db.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(db){
    return {
        &quot;{#DBNAME}&quot;: db.DBNAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>30h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>PgSQL replication discovery</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.replication.discovery[{$DBS_PGSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Application name</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},appname]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Name of the application that is connected to this WAL sender.&#13;
Имя приложения, которое подключено к этому процессу-передатчику WAL.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].APP_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Backend start</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},backend_start_unix]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>unixtime</units>
                            <description>Time when this process was started, i.e., when the client connected to this WAL sender.&#13;
Время запуска процесса, т. е. время подключения клиента к этому процессу-передатчику WAL.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].BACKEND_START_UNIX.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': IP address</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},ipaddress]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>IP address of the client connected to this WAL sender. If this field is null, it indicates that the client is connected via a Unix socket on the server machine.&#13;
IP-адрес клиента, подключённого к этому процессу-передатчику WAL. Значение null в этом поле говорит о том, что клиент подсоединён через сокет Unix на сервере.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].IP_ADDRESS.first()</params>
                                </step>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>null</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>unix-socket</error_handler_params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Receiving lag</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},receiving_lag]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <description>Receiving lag</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].RECEIVING_LAG.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Replaying lag</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},replaying_lag]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <description>Replaying lag</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].REPLAYING_LAG.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Sending lag</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},sending_lag]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <description>Sending lag</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].SENDING_LAG.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': State</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},state]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Current WAL sender state.&#13;
Possible values are:&#13;
- startup: This WAL sender is starting up;&#13;
- catchup: This WAL sender's connected standby is catching up with the primary;&#13;
- streaming: This WAL sender is streaming changes after its connected standby server has caught up with the primary;&#13;
- backup: This WAL sender is sending a backup;&#13;
- stopping: This WAL sender is stopping;&#13;
&#13;
Текущее состояние процесса-передатчика WAL.&#13;
Возможные значения:&#13;
- startup: Передатчик WAL запускается;&#13;
- catchup: Подключённый к этому передатчику WAL ведомый сервер догоняет ведущий;&#13;
- streaming: Передатчик WAL транслирует изменения после того, как подключённый к нему ведомый сервер нагнал ведущий;&#13;
- backup: Передатчик WAL передаёт резервную копию;&#13;
- stopping: Передатчик WAL останавливается;</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PostgreSQL (Replication state)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].STATE.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;startup&quot;:
    return 0;
    break;
  case &quot;catchup&quot;:
    return 1;
    break;
  case &quot;streaming&quot;:
    return 2;
    break;
  case &quot;backup&quot;:
    return 3;
    break;
  case &quot;stopping&quot;:
    return 3;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Sync state</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},sync_state]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Synchronous state of this standby server.&#13;
Possible values are:&#13;
- async: This standby server is asynchronous.&#13;
- potential: This standby server is now asynchronous, but can potentially become synchronous if one of current synchronous ones fails.&#13;
- sync: This standby server is synchronous.&#13;
- quorum: This standby server is considered as a candidate for quorum standbys.&#13;
&#13;
Состояние синхронизации этого ведомого сервера.&#13;
Возможные значения:&#13;
- async: Этот ведомый сервер является асинхронным.&#13;
- potential: Этот ведомый сервер сейчас является асинхронным, но может стать синхронным в случае отказа одного из текущих синхронных серверов.&#13;
- sync: Этот ведомый сервер является синхронным.&#13;
- quorum: Этот ведомый сервер считается кандитатом на участие в кворуме.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PostgreSQL (Replication sync state)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].SYNC_STATE.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;async&quot;:
    return 0;
    break;
  case &quot;potential&quot;:
    return 1;
    break;
  case &quot;sync&quot;:
    return 2;
    break;
  case &quot;quorum&quot;:
    return 3;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Total lag</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},total_lag]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <description>Total lag</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].TOTAL_LAG.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication '{#IPADDRESS}': Username</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.info[{#IPADDRESS},username]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Name of the user logged into this WAL sender process.&#13;
Имя пользователя, подключённого к этому процессу-передатчику WAL.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication '{#IPADDRESS}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.IP_ADDRESS== &quot;{#IPADDRESS}&quot;)].USER_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>pgsql.replication.info[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(repl){
    return {
        &quot;{#IPADDRESS}&quot;: repl.IP_ADDRESS
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>PgSQL replication slots discovery</name>
                    <type>DEPENDENT</type>
                    <key>pgsql.replication.slots.discovery[{$DBS_PGSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[PgSQL] Replication slot '{#SLOT_NAME}': Active</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.slot.info[{#SLOT_NAME},active]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>True, если слот активно используется в данный момент.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication slot '{#SLOT_NAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PostgreSQL (Replication slot active)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.SLOT_NAME== &quot;{#SLOT_NAME}&quot;)].ACTIVE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.slots[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication slot '{#SLOT_NAME}': Name</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.slot.info[{#SLOT_NAME},slot_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Name of replication slot.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication slot '{#SLOT_NAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.SLOT_NAME== &quot;{#SLOT_NAME}&quot;)].SLOT_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.slots[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[PgSQL] Replication slot '{#SLOT_NAME}': Type</name>
                            <type>DEPENDENT</type>
                            <key>pgsql.replication.slot.info[{#SLOT_NAME},slot_type]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Type of replication slot.&#13;
Тип слота - physical (физический) или logical (логический).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>PgSQL: Replication slot '{#SLOT_NAME}', Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>DBS PostgreSQL (Replication slot type)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.SLOT_NAME== &quot;{#SLOT_NAME}&quot;)].SLOT_TYPE.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;physical&quot;:
    return 0;
    break;
  case &quot;logical&quot;:
    return 1;
    break;
  default:
    return 0;
    break;
}</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>pgsql.replication.slots[{$DBS_PGSQL_CONN_STRING}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>pgsql.replication.slots[{$DBS_PGSQL_CONN_STRING}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(slots){
    return {
        &quot;{#SLOT_NAME}&quot;: slots.SLOT_NAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>DBType</tag>
                    <value>PostgreSQL</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$DBS_DBMON_AGENTD_NODATA_CRIT}</macro>
                    <value>15m</value>
                </macro>
                <macro>
                    <macro>{$DBS_DBMON_AGENTD_NODATA_WARN}</macro>
                    <value>8m</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_ACTIVE_WARN}</macro>
                    <value>40</value>
                    <description>Max running transaction in 'active' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_CACHE_HITRATIO_MIN_WARN}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_CONFLICTS_MAX_WARN}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_CONNECTION_PRC_CRIT}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_CONNECTION_PRC_WARN}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_CONN_STRING}</macro>
                    <value>host=localhost port=5432 dbname=postgres user=postgres password=postgres connect_timeout=10</value>
                    <description>PgSQL connection string</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_DBSIZE_CRIT}</macro>
                    <value>70G</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_DBSIZE_WARN}</macro>
                    <value>50G</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_DB_NODATA_WARN}</macro>
                    <value>2h</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_DEADLOCKS_MAX_WARN}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_FAIL_WAL_ARCHIVING_CRIT}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_FAIL_WAL_ARCHIVING_WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_IDLE_IN_TRANSACTION_WARN}</macro>
                    <value>5</value>
                    <description>Max running transaction in 'idle in transaction' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_INSTANCE}</macro>
                    <value>pgsql_5432</value>
                    <description>Unique instance name of PgSQL</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_LLD_FILTER_DB_MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable databases</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_LLD_FILTER_DB_NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered databases</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_ACTIVE_TIME_WARN}</macro>
                    <value>2m</value>
                    <description>Max transaction time in 'active' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_ARCHIVED_CNT_WARN}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_AUTOVACUUM_TIME_WARN}</macro>
                    <value>30m</value>
                    <description>Max time of autovacuum worker</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_EXCLUSIVE_BACKUP_DURATION_WARN}</macro>
                    <value>6h</value>
                    <description>Max duration time of exclusive backup.</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_IDLE_IN_TRANSACTION_TIME_WARN}</macro>
                    <value>1h</value>
                    <description>Max transaction time in 'idle in transaction' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_IDLE_TIME_WARN}</macro>
                    <value>10m</value>
                    <description>Max transaction time in 'idle' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_PREPARED_TIME_WARN}</macro>
                    <value>5h</value>
                    <description>Max transaction time in 'prapared' state</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_MAX_PREPARED_TRANSACTION_TIME_WARN}</macro>
                    <value>18000</value>
                    <description>second</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_PING_NODATA_CRIT}</macro>
                    <value>12m</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_PING_NODATA_WARN}</macro>
                    <value>6m</value>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_ROLLBACK_MAX_WARN}</macro>
                    <value>60</value>
                    <description>Max rollbacked transaction</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_XID_CRIT}</macro>
                    <value>2146483648</value>
                    <description>2^31-1000000</description>
                </macro>
                <macro>
                    <macro>{$DBS_PGSQL_XID_WARN}</macro>
                    <value>2137483648</value>
                    <description>2^31-10000000</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>PgSQL performance</name>
                    <hsize>2</hsize>
                    <vsize>8</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Active Connection + Max transaction time</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>1200</width>
                            <height>200</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Connections</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>1200</width>
                            <height>200</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Max transaction time</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>1200</width>
                            <height>200</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Prepared transaction</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>0</x>
                            <y>4</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Rows statistic</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>1</x>
                            <y>4</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Checkpoints issued</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>0</x>
                            <y>5</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Checkpoints buffers</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>1</x>
                            <y>5</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] WAL size</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>0</x>
                            <y>6</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Archiver statuses</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>700</width>
                            <height>100</height>
                            <x>1</x>
                            <y>6</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[PgSQL] Buffer cache</name>
                                <host>DBS_Template DB PostgreSQL</host>
                            </resource>
                            <width>1200</width>
                            <height>200</height>
                            <x>0</x>
                            <y>7</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.cache.hit[{$DBS_PGSQL_CONN_STRING}].max(10m)}&lt;{$DBS_PGSQL_CACHE_HITRATIO_MIN_WARN} and {DBS_Template DB PostgreSQL:pgsql.instance[{$DBS_PGSQL_INSTANCE},uptime].last()}&gt;48h</expression>
            <name>Cache hit ratio too low</name>
            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_CACHE_HITRATIO_MIN_WARN}, alert started: {ITEM.VALUE1}</opdata>
            <priority>WARNING</priority>
            <description>Процент успешного попадания в кэш слишком мал.&#13;
Проверьте статистику в pg_statio_user_tables и pg_statio_user_indexes&#13;
Доведите информацию до эксперта.</description>
            <dependencies>
                <dependency>
                    <name>Instance access failed</name>
                    <expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].max(#2)}=0</expression>
                    <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.ping[{$DBS_PGSQL_CONN_STRING}].min(#2)}=1</recovery_expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},backup_duration].last()}&gt;{$DBS_PGSQL_MAX_EXCLUSIVE_BACKUP_DURATION_WARN} and {DBS_Template DB PostgreSQL:pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},is_in_backup].last()}=1</expression>
            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.backup.exclusive[{$DBS_PGSQL_INSTANCE},is_in_backup].last()}=0</recovery_expression>
            <name>Duration of exclusive backup  is too long</name>
            <opdata>current: {ITEM.LASTVALUE1}, threshold: {$DBS_PGSQL_MAX_EXCLUSIVE_BACKUP_DURATION_WARN}, alert started: {ITEM.VALUE1}</opdata>
            <priority>WARNING</priority>
            <description>Длительность процедуры монопольного резервного копирования слишком высокая.&#13;
Длительная процедура монопольного резервного копирования приводит к тому, что старые журналы WAL не могут быть удалены и копятся в хранилище.&#13;
Доведите информацию до эксперта.</description>
            <dependencies>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.replication.role[{$DBS_PGSQL_CONN_STRING}].last()}=1 and {DBS_Template DB PostgreSQL:pgsql.replication.status[{$DBS_PGSQL_CONN_STRING}].max(5m)}=0</expression>
            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.replication.role[{$DBS_PGSQL_CONN_STRING}].last()}=0 or {DBS_Template DB PostgreSQL:pgsql.replication.status[{$DBS_PGSQL_CONN_STRING}].last()}&lt;&gt;0</recovery_expression>
            <name>Streaming replication is broken</name>
            <opdata>current status: {ITEM.LASTVALUE2}, role: {ITEM.LASTVALUE1}, alert started: {ITEM.VALUE2}</opdata>
            <priority>HIGH</priority>
            <description>Аларм означает, что у текущего подчиненного сервера (standby) нарушена работа потоковой репликации (репликация остановлена или прекращена в результате ошибки).&#13;
Проверьте доступность и работоспособность главного сервера (master), далее проверьте работоспособность процесса потоковой репликации у текущего проблемного сервера, доведите информацию до заказчика и эксперта.</description>
            <dependencies>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
                <tag>
                    <tag>Subsystem</tag>
                    <value>Replication</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_pct].min(5m)}&gt;{$DBS_PGSQL_CONNECTION_PRC_WARN} and {DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_connection].last()}&gt;0</expression>
            <name>Total number of connections is too high</name>
            <opdata>current: {ITEM.LASTVALUE1},{ITEM.LASTVALUE2}, threshold: {$DBS_PGSQL_CONNECTION_PRC_WARN}%, alert started: {ITEM.VALUE1},{ITEM.VALUE2}</opdata>
            <priority>WARNING</priority>
            <description>Текущее количество соединений велико.&#13;
Проанализируйте откуда идут соединения к кластеру.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <dependencies>
                <dependency>
                    <name>Total number of connections is too very high</name>
                    <expression>{DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_pct].min(5m)}&gt;{$DBS_PGSQL_CONNECTION_PRC_CRIT} and {DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_connection].last()}&gt;0</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_pct].min(5m)}&gt;{$DBS_PGSQL_CONNECTION_PRC_CRIT} and {DBS_Template DB PostgreSQL:pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},total_connection].last()}&gt;0</expression>
            <name>Total number of connections is too very high</name>
            <opdata>current: {ITEM.LASTVALUE2}, threshold: {$DBS_PGSQL_CONNECTION_PRC_CRIT}%, alert started: {ITEM.VALUE2}</opdata>
            <priority>HIGH</priority>
            <description>Текущее количество соединений очень велико.&#13;
Проанализируйте откуда идут соединения к кластеру.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <dependencies>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB PostgreSQL:pgsql.replication.role[{$DBS_PGSQL_CONN_STRING}].last()}=1 and {DBS_Template DB PostgreSQL:pgsql.replication.replay[{$DBS_PGSQL_CONN_STRING}].last()}=1</expression>
            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
            <recovery_expression>{DBS_Template DB PostgreSQL:pgsql.replication.role[{$DBS_PGSQL_CONN_STRING}].last()}=0 or {DBS_Template DB PostgreSQL:pgsql.replication.replay[{$DBS_PGSQL_CONN_STRING}].last()}&lt;&gt;1</recovery_expression>
            <name>WAL replay is paused</name>
            <opdata>replay status: {ITEM.LASTVALUE2}, role: {ITEM.LASTVALUE1}, alert started: {ITEM.VALUE2}</opdata>
            <priority>WARNING</priority>
            <description>Аларм означает, что у текущего подчиненного сервера (standby) приостановлено восстановление (была выполнена функция pg_wal_replay_pause()).&#13;
Когда восстановление приостановлено, запись изменений в базу не производится.&#13;
Когда потоковая репликация выключена, пауза при восстановлении может длиться сколь угодно долго без каких-либо проблем. Если же потоковая репликация запущена, то новые записи WAL продолжат поступать и рано или поздно заполнят весь диск, в зависимости от длительности паузы, интенсивности записи в WAL и объёма свободного пространства.&#13;
Запросите у заказчика или эксперта причины приостановки восстановления.</description>
            <dependencies>
                <dependency>
                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                    <expression>{DBS_Template DB PostgreSQL:dbmon.agent.ping[{$DBS_PGSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_PGSQL_INSTANCE}</value>
                </tag>
                <tag>
                    <tag>Subsystem</tag>
                    <value>Replication</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>[PgSQL] Active Connection + Max transaction time</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>E53935</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},active]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1976D2</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Archiver statuses</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>FILLED_REGION</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},failed_count]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>FILLED_REGION</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.archive[{$DBS_PGSQL_INSTANCE},archived_count]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Buffer cache</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},clear]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},dirty]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},popular]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},total]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.buffercache[{$DBS_PGSQL_INSTANCE},used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Checkpoints buffers</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_backend]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>43A047</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_clean]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},buffers_checkpoint]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Checkpoints issued</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>42A5F5</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoints_timed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>D32F2F</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.bgwriter[{$DBS_PGSQL_INSTANCE},checkpoints_req]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Connections</name>
            <ymax_type_1>ITEM</ymax_type_1>
            <ymax_item_1>
                <host>DBS_Template DB PostgreSQL</host>
                <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},total]</key>
            </ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},active]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},idle]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.connections[{$DBS_PGSQL_INSTANCE},idle_in_transaction]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Max transaction time</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},active]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},idle_in_transaction]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},prepared]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.transactions[{$DBS_PGSQL_INSTANCE},waiting]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Prepared transaction</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.prepared.transactions[{$DBS_PGSQL_INSTANCE},count_prepared]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.prepared.transactions[{$DBS_PGSQL_INSTANCE},oldest_prepared]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] Rows statistic</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_deleted]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_fetched]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_inserted]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_returned]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.instance.dbstat.sum[{$DBS_PGSQL_INSTANCE},tup_updated]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[PgSQL] WAL size</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.wal[{$DBS_PGSQL_INSTANCE},count]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB PostgreSQL</host>
                        <key>pgsql.wal[{$DBS_PGSQL_INSTANCE},total_size]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>DBS PostgreSQL (Exclusive backup status)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Stopped</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Running</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Instance ping)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>ERROR</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>CONNECTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replay paused)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>No</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Paused</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Master</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Not supported</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication recovery role)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Master</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Standby</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication slot active)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>False</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>True</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication slot type)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>physical</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>logical</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication state)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>startup</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>catchup</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>streaming</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>backup</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>stopping</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication status)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Master</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Not supported</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS PostgreSQL (Replication sync state)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>async</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>potential</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>sync</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>quorum</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Zabbix agent ping status</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
