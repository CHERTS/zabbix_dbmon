<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2020-08-05T05:20:20Z</date>
    <groups>
        <group>
            <name>DBS.Templates/Modules</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>DBS_Template DB MySQL</template>
            <name>DB MySQL (Active, DBMON, for all OS)</name>
            <description>Template for monitoring MySQL DB for all OS (active agent)</description>
            <groups>
                <group>
                    <name>DBS.Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>MySQL: Connections</name>
                </application>
                <application>
                    <name>MySQL: Info</name>
                </application>
                <application>
                    <name>MySQL: Performance</name>
                </application>
                <application>
                    <name>MySQL: Query cache</name>
                </application>
                <application>
                    <name>MySQL: Replication</name>
                </application>
                <application>
                    <name>MySQL: Status</name>
                </application>
                <application>
                    <name>MySQL: Throughput</name>
                </application>
                <application>
                    <name>MySQL: Variables</name>
                </application>
                <application>
                    <name>stubs</name>
                </application>
                <application>
                    <name>Zabbix agent (DBMON)</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>[DBMON] Host name of zabbix_agentd running ({$DBS_MYSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.hostname[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[DBMON] Agent ping ({$DBS_MYSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.ping[{$DBS_MYSQL_INSTANCE}]</key>
                    <history>30d</history>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Zabbix agent ping status</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                            <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                            <priority>HIGH</priority>
                            <description>Не приходят данные об активности zabbix-agent для мониторинга базы данных более {$DBS_DBMON_AGENTD_NODATA_CRIT} (минут).&#13;
Возможные причины:&#13;
1. Потеряна связь zabbix-agent-dbmon с нашим zabbix-proxy;&#13;
2. Zabbix-agent-dbmon на сервере заказчика остановлен;&#13;
3. Проблемы на сервере заказчика (сервер завис, перезагружен, умер или еще что-то);&#13;
&#13;
Срочно проверить доступность сервера заказчика, далее проверить работу zabbix-agent-dbmon.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Service</tag>
                                    <value>zabbix-agent-dbmon</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                            <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                            <priority>WARNING</priority>
                            <description>Не приходят данные об активности zabbix-agent для мониторинга базы данных более {$DBS_DBMON_AGENTD_NODATA_WARN} (минут).&#13;
Возможные причины:&#13;
1. Потеряна связь zabbix-agent-dbmon с нашим zabbix-proxy;&#13;
2. Zabbix-agent-dbmon на сервере заказчика остановлен;&#13;
3. Проблемы на сервере заказчика (сервер завис, перезагружен, умер или еще что-то);&#13;
&#13;
Срочно проверить доступность сервера заказчика, далее проверить работу zabbix-agent-dbmon.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB MySQL:dbmon.agent.ping[{$DBS_MYSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>Service</tag>
                                    <value>zabbix-agent-dbmon</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[DBMON] Version of zabbix_agent(d) running ({$DBS_MYSQL_INSTANCE})</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>dbmon.agent.version[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Zabbix agent (DBMON)</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get database info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <delay>30m</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get global status</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get global variables</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <delay>30m</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Server ID</name>
                    <type>DEPENDENT</type>
                    <key>mysql.instance[{$DBS_MYSQL_INSTANCE},server_id]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>This variable specifies the server ID. In MySQL 5.7, server_id must be specified if binary logging is enabled, otherwise the server is not allowed to start.</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SERVER_ID</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.server.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Startup time</name>
                    <type>DEPENDENT</type>
                    <key>mysql.instance[{$DBS_MYSQL_INSTANCE},startup_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>unixtime</units>
                    <description>The time at which MySQL was started.</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.STARTUPTIME</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.server.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': UUID</name>
                    <type>DEPENDENT</type>
                    <key>mysql.instance[{$DBS_MYSQL_INSTANCE},uuid]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Universal Unique Identifier (UUID).</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SERVER_UUID</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.server.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Version full</name>
                    <type>DEPENDENT</type>
                    <key>mysql.instance[{$DBS_MYSQL_INSTANCE},version_full]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Full MySQL version information (number and vendor).</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.VERSION</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.server.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Buffer pool dirty</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},buffer_pool_dirty_ratio]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_dirty]&quot;) / ( last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) + (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) = 0)) * 100 * (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) &gt; 0)</params>
                    <description>Ratio of total to dirty pages in the buffer pool.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Buffer pool efficiency</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},buffer_pool_efficiency]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_reads]&quot;) / (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_read_requests]&quot;) + (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_read_requests]&quot;) = 0 ) ) * 100 * (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_read_requests]&quot;) &gt; 0 )</params>
                    <description>The item shows how effectively the buffer pool is serving reads.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Buffer pool utilization</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},buffer_pool_utilization]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>( last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) - last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_free]&quot;) ) / ( last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) + (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) = 0)) * 100 * (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]&quot;) &gt; 0)</params>
                    <description>Ratio of used to total pages in the buffer pool.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Open file limit used, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},files_open_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},open_files]&quot;) * 100 / last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},open_files_limit]&quot;)</params>
                    <description>Open file limit used in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Key buffer used, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},key_buffer_used_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>(1 - ((last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},key_blocks_unused]&quot;) * last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},key_cache_block_size]&quot;)) / last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},key_buffer_size]&quot;))) * 100</params>
                    <description>Key buffer used in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Base memory usage (possible)</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},mysql_base_memory_usage]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <units>B</units>
                    <params>last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},key_buffer_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_additional_mem_pool_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_log_buffer_size]&quot;)</params>
                    <description>Possible use of MySQL memory (for all base buffers).&#13;
&#13;
Base memory usage = key_buffer_size +  query_cache_size +  innodb_buffer_pool_size +  innodb_additional_mem_pool_size +  innodb_log_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Memory per connection (possible)</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},mysql_per_connection_memory_usage]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <units>B</units>
                    <params>last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},sort_buffer_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},read_buffer_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},read_rnd_buffer_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},join_buffer_size]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},thread_stack]&quot;) + last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},binlog_cache_size]&quot;)</params>
                    <description>Possible use of MySQL memory per one connection.&#13;
&#13;
Memory per connection = sort_buffer_size  +  read_buffer_size +  read_rnd_buffer_size  + join_buffer_size  +  thread_stack  +  binlog_cache_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Total memory usage (possible)</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},mysql_total_memory_usage]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <units>B</units>
                    <params>last(&quot;mysql.perf[{$DBS_MYSQL_INSTANCE},mysql_base_memory_usage]&quot;) + (last(&quot;mysql.perf[{$DBS_MYSQL_INSTANCE},mysql_per_connection_memory_usage]&quot;) * last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections]&quot;))</params>
                    <description>Possible full use of MySQL memory.&#13;
&#13;
Total memory usage = Base memory usage + (Memory per connection * variable[max_connections])</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Table cache hit rate</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},table_cache_hit_rate]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},open_tables]&quot;) * 100 / last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},opened_tables]&quot;)</params>
                    <description>Table cache hit rate in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Table locks acquired immediately, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},table_locks_immediate_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},table_locks_immediate]&quot;) * 100 / (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},table_locks_waited]&quot;) + last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},table_locks_immediate]&quot;))</params>
                    <description>Table locks acquired immediately.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Sorts requiring temporary tables, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},temp_sort_table_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>(last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},sort_merge_passes]&quot;) / (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},sort_scan]&quot;) + last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},sort_range]&quot;))) * 100</params>
                    <description>Sorts requiring temporary tables.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Temporary tables created on disk, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},temp_table_disk_created_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>(last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_disk_tables]&quot;) / last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_tables]&quot;)) * 100</params>
                    <description>Temporary tables created on disk in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Thread cache hit rate</name>
                    <type>CALCULATED</type>
                    <key>mysql.perf[{$DBS_MYSQL_INSTANCE},thread_cache_hit_rate]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>100 - ((last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},threads_created]&quot;) / last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},connections]&quot;)) * 100)</params>
                    <description>Thread cache hit rate in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Ping</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <history>30d</history>
                    <description>Test connection with an instance of MySQL.</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (Instance ping)</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{nodata({$DBS_MYSQL_PING_NODATA_CRIT})}=1</expression>
                            <name>Database test connection data not received for more than {$DBS_MYSQL_PING_NODATA_CRIT} (minutes)</name>
                            <priority>HIGH</priority>
                            <description>Данные о доступности экземпляра БД MySQL не поступали более {$DBS_MYSQL_PING_NODATA_CRIT} (минут).&#13;
Необходимо проверить работу экземпляра БД, далее проверить работу и настройки zabbix-agent.&#13;
Сообщить о проблеме эксперту в  соответствующий чат.</description>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB MySQL:dbmon.agent.ping[{$DBS_MYSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_CRIT})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{nodata({$DBS_MYSQL_PING_NODATA_WARN})}=1</expression>
                            <name>Database test connection data not received for more than {$DBS_MYSQL_PING_NODATA_WARN} (minutes)</name>
                            <priority>WARNING</priority>
                            <description>Данные о доступности экземпляра БД MySQL не поступали более {$DBS_MYSQL_PING_NODATA_WARN} (минут).&#13;
Необходимо проверить работу экземпляра БД, далее проверить работу и настройки zabbix-agent-dbmon.&#13;
Сообщить о проблеме эксперту в  соответствующий чат.</description>
                            <dependencies>
                                <dependency>
                                    <name>Database test connection data not received for more than {$DBS_MYSQL_PING_NODATA_CRIT} (minutes)</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].nodata({$DBS_MYSQL_PING_NODATA_CRIT})}=1</expression>
                                </dependency>
                                <dependency>
                                    <name>Zabbix agent for database monitoring is unreachable for more {$DBS_DBMON_AGENTD_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB MySQL:dbmon.agent.ping[{$DBS_MYSQL_INSTANCE}].nodata({$DBS_DBMON_AGENTD_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <expression>{max(#2)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{min(#2)}=1</recovery_expression>
                            <name>Instance access failed</name>
                            <priority>DISASTER</priority>
                            <description>Тестовое подключение к экземпляру БД MySQL не успешно.&#13;
Необходимо проверить работу экземпляра БД, проверьте error.log на предмет ошибок.&#13;
Возможно к MySQL слишком много подключений (достигнут max_connections) и агент не может подключиться для получения данных.&#13;
Проверьте лог-файл zabbix-agent на предмет ошибок подключения к БД.</description>
                            <dependencies>
                                <dependency>
                                    <name>Database test connection data not received for more than {$DBS_MYSQL_PING_NODATA_WARN} (minutes)</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].nodata({$DBS_MYSQL_PING_NODATA_WARN})}=1</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get server info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.server.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <delay>1h</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get slave status</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Aborted clients</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_clients]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of connections that were aborted because the client died without closing the connection properly.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ABORTED_CLIENTS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Aborted clients per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_clients_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of connections that were aborted because the client died without closing the connection properly.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ABORTED_CLIENTS</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Aborted connections</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_connects]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of failed attempts to connect to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ABORTED_CONNECTS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Aborted connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_connects_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of failed attempts to connect to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ABORTED_CONNECTS</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_MYSQL_ABORTED_CONN_MAX_WARN}</expression>
                            <name>Server has aborted connections</name>
                            <opdata>(current: {ITEM.LASTVALUE1}, over {$DBS_MYSQL_ABORTED_CONN_MAX_WARN} for 5m, alert started {ITEM.VALUE1})</opdata>
                            <priority>AVERAGE</priority>
                            <description>Обнаружен высокий процент отклоненных соединений.&#13;
Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Refused connections (max_connections limit reached)</name>
                                    <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_max_connections_rate].last()}&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Bytes received</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},bytes_received_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes received from all clients.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.BYTES_RECEIVED</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Bytes sent</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},bytes_sent_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes sent to all clients.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.BYTES_SENT</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Command Delete per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_delete_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_delete counter variable indicates the number of times the delete statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.COM_DELETE</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Command Insert per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_insert_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_insert counter variable indicates the number of times the insert statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.COM_INSERT</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Command Select</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_select]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The Com_select counter variable indicates the number of times the select statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.COM_SELECT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Command Select per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_select_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_select counter variable indicates the number of times the select statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.COM_SELECT</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Command Update per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_update_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_update counter variable indicates the number of times the update statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.COM_UPDATE</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connections</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connections]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of connection attempts (successful or not) to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTIONS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connections_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of connection attempts (successful or not) to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTIONS</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors accept per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_accept_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors that occurred during calls to accept() on the listening port.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_ACCEPT</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors internal per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_internal_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of refused connections due to internal server errors, for example out of memory errors, or failed thread starts.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_INTERNAL</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors max connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_max_connections_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of refused connections due to the max_connections limit being reached.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_MAX_CONNECTIONS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;0</expression>
                            <name>Refused connections (max_connections limit reached)</name>
                            <status>DISABLED</status>
                            <priority>AVERAGE</priority>
                            <description>Обнаружены множественные отклоненные соединения. Скорее всего достигнут предел максимального количества соединений (max_connections). Доведите информацию до эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors peer address per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_peer_address_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors while searching for the connecting client IP address.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_PEER_ADDRESS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors select per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_select_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors during calls to select() or poll() on the listening port. The client would not necessarily have been rejected in these cases.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_SELECT</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Connection errors tcpwrap per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},connection_errors_tcpwrap_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of connections the libwrap library refused.&#13;
Introduced: MariaDB 10.0.4 / MySQL 5.6.5</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CONNECTION_ERRORS_TCPWRAP</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Created tmp tables on disk</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_disk_tables]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of internal on-disk temporary tables created by the server while executing statements.&#13;
&#13;
You can compare the number of internal on-disk temporary tables created to the total number of internal temporary tables created by comparing Created_tmp_disk_tables and Created_tmp_tables values.&#13;
&#13;
See also https://dev.mysql.com/doc/refman/5.7/en/internal-temporary-tables.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CREATED_TMP_DISK_TABLES</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Created tmp tables on disk per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_disk_tables_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of internal on-disk temporary tables created by the server while executing statements.&#13;
&#13;
You can compare the number of internal on-disk temporary tables created to the total number of internal temporary tables created by comparing Created_tmp_disk_tables and Created_tmp_tables values.&#13;
&#13;
See also https://dev.mysql.com/doc/refman/5.7/en/internal-temporary-tables.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CREATED_TMP_DISK_TABLES</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_MYSQL_CREATED_TMP_TABLES_ON_DISK_WARN}</expression>
                            <name>Number of internal on-disk temporary tables created per second is high</name>
                            <opdata>(current: {ITEM.LASTVALUE1}, over {$DBS_MYSQL_CREATED_TMP_TABLES_ON_DISK_WARN} for 5m, alert started {ITEM.VALUE1})</opdata>
                            <status>DISABLED</status>
                            <priority>WARNING</priority>
                            <description>Количество созданных временных таблиц на диске превышает порог.&#13;
&#13;
Когда временная таблица в памяти растет до количества байтов в tmp_table_size, то дальнейший ее рост приводит в созданию временной таблице уже на диске и переноса содержимого из памяти на диск, этот процесс увеличивает счетчик Created_tmp_disk_tables&#13;
&#13;
Возможно стоит увеличить параметры join_buffer_size и sort_buffer_size.&#13;
Так же нужно рассмотреть возможность создания индексов, которые будут использоваться&#13;
- в соединениях через eq_ref&#13;
- сортирует по индексу в порядке&#13;
&#13;
Передайте данные эксперту.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Created tmp files on disk per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_files_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>How many temporary files mysqld has created (per second).</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CREATED_TMP_FILES</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_MYSQL_CREATED_TMP_FILES_ON_DISK_WARN}</expression>
                            <name>Number of temporary files created per second is high</name>
                            <opdata>(current: {ITEM.LASTVALUE1}, over {$DBS_MYSQL_CREATED_TMP_FILES_ON_DISK_WARN} for 5m, alert started {ITEM.VALUE1})</opdata>
                            <status>DISABLED</status>
                            <priority>WARNING</priority>
                            <description>Количество созданных временных файлов на диске превышает порог.&#13;
Возможно требуется оптимизация SQL-запросов.&#13;
Передайте данные эксперту.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Created tmp tables on memory</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_tables]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of internal temporary tables created by the server while executing statements.&#13;
&#13;
You can compare the number of internal on-disk temporary tables created to the total number of internal temporary tables created by comparing Created_tmp_disk_tables and Created_tmp_tables values.&#13;
&#13;
See also https://dev.mysql.com/doc/refman/5.7/en/internal-temporary-tables.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CREATED_TMP_TABLES</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Created tmp tables on memory per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},created_tmp_tables_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of internal temporary tables created (per second) by the server while executing statements.&#13;
&#13;
You can compare the number of internal on-disk temporary tables created to the total number of internal temporary tables created by comparing Created_tmp_disk_tables and Created_tmp_tables values.&#13;
&#13;
See also https://dev.mysql.com/doc/refman/5.7/en/internal-temporary-tables.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CREATED_TMP_TABLES</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_MYSQL_CREATED_TMP_TABLES_ON_MEMORY_WARN}</expression>
                            <name>Number of internal temporary tables created per second is high</name>
                            <opdata>(current: {ITEM.LASTVALUE1}, over {$DBS_MYSQL_CREATED_TMP_TABLES_ON_MEMORY_WARN} for 5m, alert started {ITEM.VALUE1})</opdata>
                            <status>DISABLED</status>
                            <priority>WARNING</priority>
                            <description>Количество созданных временных таблиц в памяти превышает порог.&#13;
&#13;
Это происходит тогда, когда запрос выполняет объединение или сортировку (через ORDER BY) без преимущества индекса, в этом случае в памяти должна создается временная таблица (это увеличит счетчик Created_tmp_tables).&#13;
Возможно стоит увеличить параметры tmp_table_size и max_heap_table_size, но имейте в виду, что настройка этих параметров не приводит к тому, что запросы ведут себя лучше.&#13;
Фактически это приводит к тому, что неэффективные запросы ведут себя хуже, чем раньше.&#13;
Когда временная таблица в памяти растет до количества байтов в tmp_table_size, то дальнейший ее рост приводит в созданию временной таблице уже на диске и переноса содержимого из памяти на диск, этот процесс увеличивает счетчик Created_tmp_disk_tables&#13;
&#13;
Возможно стоит увеличить параметры join_buffer_size и sort_buffer_size.&#13;
Так же нужно рассмотреть возможность создания индексов, которые будут использоваться&#13;
- в соединениях через eq_ref&#13;
- сортирует по индексу в порядке&#13;
&#13;
Передайте данные эксперту.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read first</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_first]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of times the first entry in an index was read.&#13;
If this value is high, it suggests that the server is doing a lot of full index scans (for example, SELECT col1 FROM foo, assuming that col1 is indexed).</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_FIRST</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read first / Uptime per 1 hour</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_first_uptime_per_one_hour]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <params>(last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_first]&quot;)/last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},uptime]&quot;))*60*60</params>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read key per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_key_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of row read requests (per second) based on an index value.&#13;
A high value indicates indexes are regularly being used, which is usually positive.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_KEY</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read next per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_next_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of requests (per second) to read the next row from an index (in order).&#13;
Increments when doing an index scan or querying an index column with a range constraint.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_NEXT</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read prev per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_prev_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of requests (per second) to read the previous row from an index (in order).&#13;
Mostly used with ORDER BY DESC.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_PREV</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read rnd</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of requests to read a row based on a fixed position.&#13;
This value is high if you are doing a lot of queries that require sorting of the result.&#13;
You probably have a lot of queries that require MySQL to scan entire tables or you have joins that do not use keys properly.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_RND</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read rnd next</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd_next]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of requests to read the next row.&#13;
A large number of these may indicate many table scans and improperly used indexes.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_RND_NEXT</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read rnd next per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd_next_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of requests (per second) to read the next row.&#13;
A large number of these may indicate many table scans and improperly used indexes.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HANDLER_READ_RND_NEXT</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read rnd next / Uptime per 1 hour</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd_next_uptime_per_one_hour]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <params>(last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd_next]&quot;)/last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},uptime]&quot;))*60*60</params>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Handler read rnd / Uptime per 1 hour</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd_uptime_per_one_hour]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <params>(last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},handler_read_rnd]&quot;)/last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},uptime]&quot;))*60*60</params>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB buffer pool dirty pages</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_dirty]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The current number of dirty pages in the InnoDB buffer pool.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_PAGES_DIRTY</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB buffer pool pages free</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_free]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of free pages in the InnoDB buffer pool.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_PAGES_FREE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB buffer pool pages total</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The total size of the InnoDB buffer pool, in pages.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_PAGES_TOTAL</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB buffer pool reads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_reads]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of logical reads that InnoDB could not satisfy from the buffer pool, and had to read directly from disk.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_READS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB buffer pool read requests</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_read_requests]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of logical read requests.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_READ_REQUESTS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB log waits</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_log_waits]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of times that the log buffer was too small and a wait was required for it to be flushed before continuing.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_LOG_WAITS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB row lock time</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_row_lock_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>The total time spent in acquiring row locks for InnoDB tables, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_ROW_LOCK_TIME</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB row lock time max</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_row_lock_time_max]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>The maximum time to acquire a row lock for InnoDB tables, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_ROW_LOCK_TIME_MAX</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: InnoDB row lock waits</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_row_lock_waits]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of times operations on InnoDB tables had to wait for a row lock.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_ROW_LOCK_WAITS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Key blocks unused</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},key_blocks_unused]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of unused blocks in the MyISAM key cache.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KEY_BLOCKS_UNUSED</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Max used connections</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},max_used_connections]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The maximum number of connections that have been in use simultaneously since the server started.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MAX_USED_CONNECTIONS</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Opened tables</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},opened_tables]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of tables that have been opened. If Opened_tables is big, your table_open_cache value is probably too small.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/table-cache.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OPENED_TABLES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Opened tables definitions</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},opened_tables_definitions]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of table definitions that have been cached.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/table-cache.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OPENED_TABLE_DEFINITIONS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Open files</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},open_files]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of files that are open. This count includes regular files opened by the server. It does not include other types of files such as sockets or pipes. Also, the count does not include files that storage engines open using their own internal functions rather than asking the server level to do so.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OPEN_FILES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Open tables</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},open_tables]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of tables that are open.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OPEN_TABLES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Query cache efficiency</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_efficiency]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},qcache_hits]&quot;) / (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},com_select]&quot;) + last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},qcache_hits]&quot;)) * 100</params>
                    <description>Query cache efficiency in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Query cache free memory</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_free_memory]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The amount of free memory for the query cache.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QCACHE_FREE_MEMORY</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Query cache hits</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_hits]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of query cache hits.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QCACHE_HITS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Query cache inserts</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_inserts]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of queries added to the query cache.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QCACHE_INSERTS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Query cache lowmem prunes</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_lowmem_prunes]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of queries that were deleted from the query cache because of low memory.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QCACHE_LOWMEM_PRUNES</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Query cache not cached</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_not_cached]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of noncached queries (not cacheable, or not cached due to the query_cache_type setting).&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QCACHE_NOT_CACHED</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Query cache used, %</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_used_pct]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>100 - (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},qcache_free_memory]&quot;) / last(&quot;mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_size]&quot;)) * 100</params>
                    <description>Query cache used in percentage.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Queries per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},queries_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of statements executed by the server. This variable includes statements executed within stored programs, unlike the Questions variable.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUERIES</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Query cache prunes per day</name>
                    <type>CALCULATED</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},query_cache_prunes_per_day]</key>
                    <delay>10m</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <params>last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},qcache_lowmem_prunes]&quot;) / (last(&quot;mysql.status[{$DBS_MYSQL_INSTANCE},uptime]&quot;) / 86400)</params>
                    <description>Query cache prunes per day.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Questions per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},questions_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of statements executed by the server. This includes only statements sent to the server by clients and not statements executed within stored programs, unlike the Queries variable.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUESTIONS</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Select full join</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},select_full_join]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of joins that perform table scans because they do not use indexes. If this value is not 0, you should carefully check the indexes of your tables.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SELECT_FULL_JOIN</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Select full rahge join</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},select_full_range_join]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of joins that used a range search on a reference table.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SELECT_FULL_RANGE_JOIN</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Select range</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},select_range]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of joins that used ranges on the first table. This is normally not a critical issue even if the value is quite large.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SELECT_RANGE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Select range check</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},select_range_check]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of joins without keys that check for key usage after each row. If this is not 0, you should carefully check the indexes of your tables.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SELECT_RANGE_CHECK</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Select scan</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},select_scan]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of joins that did a full scan of the first table.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SELECT_SCAN</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Slow queries per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},slow_queries_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of queries that have taken more than long_query_time seconds. This counter increments regardless of whether the slow query log is enabled.</description>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLOW_QUERIES</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$DBS_MYSQL_SLOW_QUERIES_MAX_WARN}</expression>
                            <name>Server has slow queries</name>
                            <opdata>(current: {ITEM.LASTVALUE1}, over {$DBS_MYSQL_SLOW_QUERIES_MAX_WARN} for 5m, alert started {ITEM.VALUE1})</opdata>
                            <priority>WARNING</priority>
                            <description>У экземпляра MySQL регистрируется рост числа медленных запросов.&#13;
Более {$DBS_MYSQL_SLOW_QUERIES_MAX_WARN} запросов в секунду за последние 5 минут.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Sort merge passes</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},sort_merge_passes]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of merge passes that the sort algorithm has had to do. If this value is large, you should consider increasing the value of the sort_buffer_size system variable.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SORT_MERGE_PASSES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Sort merge passes per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},sort_merge_passes_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>MySQL: Throughput</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},sort_merge_passes]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Sort range</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},sort_range]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of sorts that were done using ranges.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SORT_RANGE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Sort scan</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},sort_scan]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of sorts that were done by scanning the table.</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SORT_SCAN</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Table locks immediate</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},table_locks_immediate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of times that a request for a table lock could be granted immediately.&#13;
&#13;
See more: https://dev.mysql.com/doc/refman/5.7/en/internal-locking.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.TABLE_LOCKS_IMMEDIATE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Table locks waited</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},table_locks_waited]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of times that a request for a table lock could not be granted immediately and a wait was needed. If this is high and you have performance problems, you should first optimize your queries, and then either split your table or tables or use replication.&#13;
&#13;
See more: https://dev.mysql.com/doc/refman/5.7/en/internal-locking.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.TABLE_LOCKS_WAITED</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threadpool idle threads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threadpool_idle_threads]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of inactive threads in the thread pool. Threads become inactive for various reasons, such as by waiting for new work. However, an inactive thread is not necessarily one that has not been assigned work. Threads are also considered inactive if they are being blocked while waiting on disk I/O, or while waiting on a lock, etc. This status variable is only meaningful on Unix&#13;
&#13;
See more info: https://mariadb.com/kb/en/thread-pool-in-mariadb/</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADPOOL_IDLE_THREADS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>No thread_pool enabled or use no MariaDB or Percona Server for MySQL</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threadpool threads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threadpool_threads]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of threads in the thread pool. In rare cases, this can be slightly higher than thread_pool_max_threads, because each thread group needs at least two threads (i.e. at least one worker thread and at least one listener thread) to prevent deadlocks.&#13;
&#13;
See more info: https://mariadb.com/kb/en/thread-pool-in-mariadb/</description>
                    <applications>
                        <application>
                            <name>MySQL: Status</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADPOOL_THREADS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>No thread_pool enabled or use no MariaDB or Percona Server for MySQL</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>5m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threads cached</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_cached]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of threads in the thread cache.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADS_CACHED</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threads connected</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of currently open connections.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADS_CONNECTED</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threads created per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_created_rate]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of threads created to handle connections (per second).&#13;
If Threads_created is big, you may want to increase the thread_cache_size value.&#13;
The cache miss rate can be calculated as Threads_created/Connections.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADS_CREATED</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' status: Threads running</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_running]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of threads that are not sleeping.</description>
                    <applications>
                        <application>
                            <name>MySQL: Connections</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREADS_RUNNING</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Uptime</name>
                    <type>DEPENDENT</type>
                    <key>mysql.status[{$DBS_MYSQL_INSTANCE},uptime]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>uptime</units>
                    <description>The number of seconds that the server has been up.</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.UPTIME</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{change()}&lt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Instance '{$DBS_MYSQL_INSTANCE}' has just been restarted</name>
                            <opdata>(current uptime: {ITEM.LASTVALUE}, alert started: {ITEM.VALUE})</opdata>
                            <priority>DISASTER</priority>
                            <description>Процесс (сервис) mysqld был перезапущен.&#13;
Необходимо проверить факт перезапуска на сервере заказчика, проверить логи (error.log), далее уточнить в чате кто произвел перезапуск.&#13;
Возможно, что перезапуск произошел в результате краха процесса в автоматическом режиме.&#13;
Доведите информацию до заказчика и эксперта.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get TOP{$DBS_MYSQL_TOP_TABLE_BY_ROWS} table by rows</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                    <delay>10m</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Get TOP{$DBS_MYSQL_TOP_TABLE_BY_SIZE} table by size</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                    <delay>10m</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>stubs</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Binlog cache size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},binlog_cache_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The size of the cache to hold changes to the binary log during a transaction. A binary log cache is allocated for each client if the server supports any transactional storage engines and if the server has the binary log enabled (--log-bin option). If you often use large transactions, you can increase this cache size to get better performance. The Binlog_cache_use and Binlog_cache_disk_use status variables can be useful for tuning the size of this variable.&#13;
&#13;
binlog_cache_size sets the size for the transaction cache only; the size of the statement cache is governed by the binlog_stmt_cache_size system variable.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/binary-log.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.BINLOG_CACHE_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Binary log format</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},binlog_format]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>This variable sets the binary logging format, and can be any one of STATEMENT, ROW, or MIXED.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (binlog_format)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.BINLOG_FORMAT</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;STATEMENT&quot;:
    return 1;
    break;
  case &quot;ROW&quot;:
    return 2;
    break;
  case &quot;MIXED&quot;:
    return 3;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Setting 'binlog_format' has been changed</name>
                            <opdata>(current: {ITEM.VALUE})</opdata>
                            <priority>INFO</priority>
                            <description>Настройка 'binlog_format' была изменена.&#13;
Данная настройка отвечает за формат бинарного лога и важна при репликации.&#13;
Доведите информацию до эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Binary log row image</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},binlog_row_image]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>For MySQL row-based replication, this variable determines how row images are written to the binary log.&#13;
This variable actually takes one of three possible values, as shown in the following list:&#13;
FULL: Log all columns in both the before image and the after image.&#13;
MINIMAL: Log only those columns in the before image that are required to identify the row to be changed; log only those columns in the after image where a value was specified by the SQL statement, or generated by auto-increment.&#13;
NOBLOB: Log all columns (same as full), except for BLOB and TEXT columns that are not required to identify rows, or that have not changed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (binlog_row_image)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.BINLOG_ROW_IMAGE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;FULL&quot;:
    return 1;
    break;
  case &quot;MINIMAL&quot;:
    return 2;
    break;
  case &quot;NOBLOB&quot;:
    return 3;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Enforce GTID consistency</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},enforce_gtid_consistency]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Depending on the value of this variable, the server enforces GTID consistency by allowing execution of only statements that can be safely logged using a GTID. You must set this variable to ON before enabling GTID based replication.&#13;
The values that enforce_gtid_consistency can be configured to are:&#13;
OFF: all transactions are allowed to violate GTID consistency.&#13;
ON: no transaction is allowed to violate GTID consistency.&#13;
WARN: all transactions are allowed to violate GTID consistency, but a warning is generated in this case. WARN was added in MySQL 5.7.6.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (enforce_gtid_consistency)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ENFORCE_GTID_CONSISTENCY</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  case &quot;WARN&quot;:
    return 2;
    break;
  default:
    return 3;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: GTID mode</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},gtid_mode]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Controls whether GTID based logging is enabled and what type of transactions the logs can contain.&#13;
The different modes are now:&#13;
OFF: Both new and replicated transactions must be anonymous.&#13;
OFF_PERMISSIVE: New transactions are anonymous. Replicated transactions can be either anonymous or GTID transactions.&#13;
ON_PERMISSIVE: New transactions are GTID transactions. Replicated transactions can be either anonymous or GTID transactions.&#13;
ON: Both new and replicated transactions must be GTID transactions.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (gtid_mode)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.GTID_MODE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  case &quot;OFF_PERMISSIVE&quot;:
    return 2;
    break;
  case &quot;ON_PERMISSIVE&quot;:
    return 3;
    break;
  default:
    return 4;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Setting 'gtid_mode' has been changed</name>
                            <opdata>(current: {ITEM.VALUE})</opdata>
                            <priority>INFO</priority>
                            <description>Настройка 'gtid_mode' была изменена.&#13;
Данная настройка отвечает за включение/отключение режима GTID и важна при репликации.&#13;
Доведите информацию до эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Have query cache</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},have_query_cache]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>YES if mysqld supports the query cache, NO if not.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (have_query_cache)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HAVE_QUERY_CACHE</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;NO&quot;:
    return 0;
    break;
  case &quot;YES&quot;:
    return 1;
    break;
  default:
    return 3;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Hostname</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},hostname]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Hostname</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.HOSTNAME</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB additional mem pool size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_additional_mem_pool_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The size in bytes of a memory pool InnoDB uses to store data dictionary information and other internal data structures. The more tables you have in your application, the more memory you allocate here. If InnoDB runs out of memory in this pool, it starts to allocate memory from the operating system and writes warning messages to the MySQL error log. The default value is 8MB.&#13;
&#13;
Removed in MySQL 5.7.4.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>if (value.indexOf(&quot;INNODB_ADDITIONAL_MEM_POOL_SIZE&quot;) &gt; -1) {
  return value;
} else {
  return &quot;{\&quot;INNODB_ADDITIONAL_MEM_POOL_SIZE\&quot;:\&quot;0\&quot;}&quot;;
}</params>
                        </step>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_ADDITIONAL_MEM_POOL_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB buffer pool dump at shutdown</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_dump_at_shutdown]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Specifies whether to record the pages cached in the InnoDB buffer pool when the MySQL server is shut down, to shorten the warmup process at the next restart. Typically used in combination with innodb_buffer_pool_load_at_startup.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-preload-buffer-pool.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (ON-OFF)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_DUMP_AT_SHUTDOWN</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return value;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB buffer pool instances</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_instances]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of regions that the InnoDB buffer pool is divided into. For systems with buffer pools in the multi-gigabyte range, dividing the buffer pool into separate instances can improve concurrency, by reducing contention as different threads read and write to cached pages. Each page that is stored in or read from the buffer pool is assigned to one of the buffer pool instances randomly, using a hashing function. Each buffer pool manages its own free lists, flush lists, LRUs, and all other data structures connected to a buffer pool, and is protected by its own buffer pool mutex.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_instances</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_INSTANCES</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB buffer pool load at startup</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_load_at_startup]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Specifies that, on MySQL server startup, the InnoDB buffer pool is automatically warmed up by loading the same pages it held at an earlier time. Typically used in combination with innodb_buffer_pool_dump_at_shutdown.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-preload-buffer-pool.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (ON-OFF)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_LOAD_AT_STARTUP</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return value;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB buffer pool size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data. The default value is 134217728 bytes (128MB).&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_BUFFER_POOL_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB file per table</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_file_per_table]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>When innodb_file_per_table is enabled, tables are created in file-per-table tablespaces. When disabled, tables are created in the system tablespace.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_file_per_table</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (ON-OFF)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_FILE_PER_TABLE</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return value;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB flush log at trx commit</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_flush_log_at_trx_commit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Controls the balance between strict ACID compliance for commit operations and higher performance that is possible when commit-related I/O operations are rearranged and done in batches. You can achieve better performance by changing the default value but then you can lose transactions in a crash.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_FLUSH_LOG_AT_TRX_COMMIT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB log buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_log_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The size in bytes of the buffer that InnoDB uses to write to the log files on disk. The default value changed from 8MB to 16MB with the introduction of 32KB and 64KB innodb_page_size values. A large log buffer enables large transactions to run without the need to write the log to disk before the transactions commit. Thus, if you have transactions that update, insert, or delete many rows, making the log buffer larger saves disk I/O.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_LOG_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB max dirty pages pct</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_max_dirty_pages_pct]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>InnoDB tries to flush data from the buffer pool so that the percentage of dirty pages does not exceed this value. Specify an integer in the range from 0 to 99. The default value is 75.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_MAX_DIRTY_PAGES_PCT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB read IO threads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_read_io_threads]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of I/O threads for read operations in InnoDB. Its counterpart for write threads is innodb_write_io_threads&#13;
&#13;
See more info:&#13;
https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-multiple_io_threads.html&#13;
and&#13;
https://dev.mysql.com/doc/refman/5.7/en/optimizing-innodb-diskio.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_READ_IO_THREADS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB sort buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_sort_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Specifies the size of sort buffers used to sort data during creation of an InnoDB index. The specified size defines the amount of data that is read into memory for internal sorting and then written out to disk. This process is referred to as a “run”. During the merge phase, pairs of buffers of the specified size are read and merged. The larger the setting, the fewer runs and merges there are.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_SORT_BUFFER_SIZE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: InnoDB write IO threads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},innodb_write_io_threads]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of I/O threads for write operations in InnoDB. The default value is 4. Its counterpart for read threads is innodb_read_io_threads&#13;
&#13;
See more info:&#13;
https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-multiple_io_threads.html&#13;
and&#13;
https://dev.mysql.com/doc/refman/5.7/en/optimizing-innodb-diskio.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INNODB_WRITE_IO_THREADS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Interactive timeout</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},interactive_timeout]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>The number of seconds the server waits for activity on an interactive connection before closing it. An interactive client is defined as a client that uses the CLIENT_INTERACTIVE option to mysql_real_connect(). See also wait_timeout.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.INTERACTIVE_TIMEOUT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Join buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},join_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. Normally, the best way to get fast joins is to add indexes. Increase the value of join_buffer_size to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_join_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.JOIN_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Key buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},key_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Index blocks for MyISAM tables are buffered and are shared by all threads. key_buffer_size is the size of the buffer used for index blocks. The key buffer is also known as the key cache.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_key_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KEY_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Key cache block size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},key_cache_block_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The size in bytes of blocks in the key cache. The default value is 1024.&#13;
&#13;
See more info:https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_key_cache_block_size&#13;
See more info from section 8.10.2, “The MyISAM Key Cache”: https://dev.mysql.com/doc/refman/5.7/en/myisam-key-cache.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KEY_CACHE_BLOCK_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Log bin</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},log_bin]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Whether the binary log is enabled. If the --log-bin option is used, then the value of this variable is ON; otherwise it is OFF. This variable reports only on the status of binary logging (enabled or disabled); it does not actually report the value to which --log-bin is set.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (log_bin)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LOG_BIN</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return 3;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Log error verbosity</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},log_error_verbosity]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The verbosity of the server in writing error, warning, and note messages to the error log.&#13;
The following table shows the permitted values.&#13;
&#13;
Level:&#13;
Error messages - 1&#13;
Error and warning messages - 2&#13;
Error, warning, and information messages - 3&#13;
&#13;
The default is 3.&#13;
&#13;
log_error_verbosity was added in MySQL 5.7.2. It is preferred over, and should be used instead of, the older log_warnings system variable.&#13;
See the description of log_warnings for information about how that variable relates to log_error_verbosity. In particular, assigning a value to log_warnings assigns a value to log_error_verbosity and vice versa.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LOG_ERROR_VERBOSITY</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Log warnings</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},log_warnings]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Whether to produce additional warning messages to the error log. As of MySQL 5.7.2, information items previously governed by log_warnings are governed by log_error_verbosity, which is preferred over, and should be used instead of, the older log_warnings system variable. (The log_warnings system variable and --log-warnings command-line option are deprecated and will be removed in a future MySQL release.)&#13;
&#13;
See detail info in https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_log_warnings</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LOG_WARNINGS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Long query time</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},long_query_time]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one. The minimum and default values of long_query_time are 0 and 10, respectively. The value can be specified to a resolution of microseconds. See Section 5.4.5, “The Slow Query Log” in URL: https://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html&#13;
&#13;
Smaller values of this variable result in more statements being considered long-running, with the result that more space is required for the slow query log. For very small values (less than one second), the log may grow quite large in a small time. Increasing the number of statements considered long-running may also result in false positives for the “excessive Number of Long Running Processes” alert in MySQL Enterprise Monitor, especially if Group Replication is enabled. For these reasons, very small values should be used in test environments only, or, in production environments, only for a short period.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (thread_handling)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LONG_QUERY_TIME</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Max binlog size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},max_binlog_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>If a write to the binary log causes the current log file size to exceed the value of this variable, the server rotates the binary logs (closes the current file and opens the next one). The minimum value is 4096 bytes. The maximum and default value is 1GB.&#13;
&#13;
A transaction is written in one chunk to the binary log, so it is never split between several binary logs. Therefore, if you have big transactions, you might see binary log files larger than max_binlog_size.&#13;
&#13;
If max_relay_log_size is 0, the value of max_binlog_size applies to relay logs as well.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MAX_BINLOG_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Max connections</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The maximum permitted number of simultaneous client connections.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MAX_CONNECTIONS</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {last()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Setting 'max_connections' has been changed</name>
                            <opdata>(current: {ITEM.VALUE})</opdata>
                            <priority>INFO</priority>
                            <description>Настройка 'max_connections' была изменена.&#13;
Данная настройка отвечает за максимальное количество соединений к экземпляру MySQL и является очень важной.&#13;
Необдуманное завышение настройки может послужить причиной роста нагрузки на экземпляр, а так же стать причиной высокого потребления памяти при росте числа подключений.&#13;
Доведите информацию до эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Open files limit</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},open_files_limit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of file descriptors available to mysqld from the operating system. mysqld reserves descriptors with setrlimit(), using the value requested at startup by setting this variable directly or by using the --open-files-limit option to mysqld_safe. If mysqld produces the error Too many open files, try increasing the open_files_limit value. Internally, the maximum value for this variable is the maximum unsigned integer value, but the actual maximum is platform dependent.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_open_files_limit</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OPEN_FILES_LIMIT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Query cache limit</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_limit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Do not cache results that are larger than this number of bytes.&#13;
The default value is 1MB.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUERY_CACHE_LIMIT</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Query cache min res until</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_min_res_unit]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The minimum size (in bytes) for blocks allocated by the query cache.&#13;
The default value is 4096 (4KB).&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUERY_CACHE_MIN_RES_UNIT</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Query cache size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The amount of memory allocated for caching query results.&#13;
By default, the query cache is disabled.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUERY_CACHE_SIZE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>if (value == 0) {
  return 1;
} else {
  return value;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Query cache type</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_type]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Set the query cache type.&#13;
0 or OFF - Do not cache results in or retrieve results from the query cache. Note that this does not deallocate the query cache buffer. To do that, you should set query_cache_size to 0.&#13;
1 or ON - Cache all cacheable query results except for those that begin with SELECT SQL_NO_CACHE.&#13;
2 or DEMAND - Cache results only for cacheable queries that begin with SELECT SQL_CACHE.&#13;
Removed in MySQL 8.0.3.</description>
                    <applications>
                        <application>
                            <name>MySQL: Query cache</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (query_cache_type)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.QUERY_CACHE_TYPE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  case &quot;DEMAND&quot;:
    return 2;
    break;
  default:
    return value;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Read buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},read_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Each thread that does a sequential scan for a MyISAM table allocates a buffer of this size (in bytes) for each table it scans. If you do many sequential scans, you might want to increase this value, which defaults to 131072. The value of this variable should be a multiple of 4KB. If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_read_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.READ_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Read rnd buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},read_rnd_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>This variable is used for reads from MyISAM tables, and, for any storage engine, for Multi-Range Read optimization.&#13;
&#13;
When reading rows from a MyISAM table in sorted order following a key-sorting operation, the rows are read through this buffer to avoid disk seeks. See Section 8.2.1.14, “ORDER BY Optimization”. Setting the variable to a large value can improve ORDER BY performance by a lot. However, this is a buffer allocated for each client, so you should not set the global variable to a large value. Instead, change the session variable only from within those clients that need to run large queries.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/mrr-optimization.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.READ_RND_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MariaDB] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slave parallel mode</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slave_parallel_mode]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Controls what transactions are applied in parallel when using parallel replication.&#13;
&#13;
optimistic: tries to apply most transactional DML in parallel, and handles any conflicts with rollback and retry.&#13;
conservative: limits parallelism in an effort to avoid any conflicts. See conservative mode.&#13;
aggressive: tries to maximize the parallelism, possibly at the cost of increased conflict rate.&#13;
minimal: only parallelizes the commit steps of transactions.&#13;
none: disables parallel apply completely.&#13;
&#13;
See more info: https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#slave_parallel_mode</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MariaDB (slave_parallel_mode)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLAVE_PARALLEL_MODE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;optimistic&quot;:
    return 1;
    break;
  case &quot;conservative&quot;:
    return 2;
    break;
  case &quot;aggressive&quot;:
    return 3;
    break;
  case &quot;minimal&quot;:
    return 4;
    break;
  case &quot;none&quot;:
    return 5;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slave parallel type</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slave_parallel_type]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>When using a multithreaded slave (slave_parallel_workers is greater than 0), this variable specifies the policy used to decide which transactions are allowed to execute in parallel on the slave. The variable has no effect on slaves for which multithreading is not enabled. The possible values are:&#13;
LOGICAL_CLOCK: Transactions that are part of the same binary log group commit on a master are applied in parallel on a slave. The dependencies between transactions are tracked based on their timestamps to provide additional parallelization where possible. When this value is set, the binlog_transaction_dependency_tracking system variable can be used on the master to specify that write sets are used for parallelization in place of timestamps, if a write set is available for the transaction and gives improved results compared to timestamps.&#13;
DATABASE: Transactions that update different databases are applied in parallel. This value is only appropriate if data is partitioned into multiple databases which are being updated independently and concurrently on the master. There must be no cross-database constraints, as such constraints may be violated on the slave.&#13;
&#13;
When slave_preserve_commit_order=1 is set, you can only use LOGICAL_CLOCK.&#13;
&#13;
If your replication topology uses multiple levels of slaves, LOGICAL_CLOCK may achieve less parallelization for each level the slave is away from the master. You can reduce this effect by using binlog_transaction_dependency_tracking on the master to specify that write sets are used instead of timestamps for parallelization where possible.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (slave_parallel_type)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLAVE_PARALLEL_TYPE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;DATABASE&quot;:
    return 1;
    break;
  case &quot;LOGICAL_CLOCK&quot;:
    return 2;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slave parallel workers</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slave_parallel_workers]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Sets the number of slave applier threads for executing replication transactions in parallel. Setting this variable to a number greater than 0 creates a multithreaded slave with this number of applier threads. When set to 0 (the default) parallel execution is disabled and the slave uses a single applier thread. Setting slave_parallel_workers has no immediate effect. The state of the variable applies on all subsequent START SLAVE statements.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLAVE_PARALLEL_WORKERS</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slave pending jobs size max</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slave_pending_jobs_size_max]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>For multithreaded slaves, this variable sets the maximum amount of memory (in bytes) available to slave worker queues holding events not yet applied. Setting this variable has no effect on slaves for which multithreading is not enabled. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START SLAVE commands.&#13;
&#13;
The minimum possible value for this variable is 1024; the default is 16MB. The maximum possible value is 18446744073709551615 (16 exabytes). Values that are not exact multiples of 1024 are rounded down to the next-highest multiple of 1024 prior to being stored.&#13;
&#13;
The value of this variable is a soft limit and can be set to match the normal workload. If an unusually large event exceeds this size, the transaction is held until all the slave workers have empty queues, and then processed. All subsequent transactions are held until the large transaction has been completed.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLAVE_PENDING_JOBS_SIZE_MAX</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slave preserve commit order</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slave_preserve_commit_order]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>For multithreaded slaves, the setting 1 for this variable ensures that transactions are externalized on the slave in the same order as they appear in the slave's relay log, and prevents gaps in the sequence of transactions that have been executed from the relay log. This variable has no effect on slaves for which multithreading is not enabled. Note that slave_preserve_commit_order=1 does not preserve the order of non-transactional DML updates, so these might commit before transactions that precede them in the relay log, which might result in gaps.&#13;
&#13;
See more: https://dev.mysql.com/doc/refman/5.7/en/replication-options-slave.html#sysvar_slave_preserve_commit_order</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (slave_preserve_commit_order)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLAVE_PRESERVE_COMMIT_ORDER</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return value;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slow query log</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slow_query_log]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Whether the slow query log is enabled.&#13;
The value can be 0 (or OFF) to disable the log or 1 (or ON) to enable the log.&#13;
The destination for log output is controlled by the log_output system variable; if that value is NONE, no log entries are written even if the log is enabled.&#13;
&#13;
“Slow” is determined by the value of the long_query_time variable. See Section 5.4.5, “The Slow Query Log”, URL: https://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (ON-OFF)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLOW_QUERY_LOG</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Slow query log file</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},slow_query_log_file]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>The name of the slow query log file.&#13;
The default value is host_name-slow.log, but the initial value can be changed with the --slow_query_log_file option.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SLOW_QUERY_LOG_FILE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Sort buffer size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},sort_buffer_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>Each session that must perform a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization. At minimum the sort_buffer_size value must be large enough to accommodate fifteen tuples in the sort buffer. Also, increasing the value of max_sort_length may require increasing the value of sort_buffer_size.&#13;
&#13;
If you see many Sort_merge_passes per second in SHOW GLOBAL STATUS output, you can consider increasing the sort_buffer_size value to speed up ORDER BY or GROUP BY operations that cannot be improved with query optimization or improved indexing.&#13;
&#13;
See more info: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_sort_buffer_size</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SORT_BUFFER_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Sync binlog</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},sync_binlog]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Controls how often the MySQL server synchronizes the binary log to disk.&#13;
&#13;
sync_binlog=0: Disables synchronization of the binary log to disk by the MySQL server. Instead, the MySQL server relies on the operating system to flush the binary log to disk from time to time as it does for any other file. This setting provides the best performance, but in the event of a power failure or operating system crash, it is possible that the server has committed transactions that have not been synchronized to the binary log.&#13;
&#13;
sync_binlog=1: Enables synchronization of the binary log to disk before transactions are committed. This is the safest setting but can have a negative impact on performance due to the increased number of disk writes. In the event of a power failure or operating system crash, transactions that are missing from the binary log are only in a prepared state. This permits the automatic recovery routine to roll back the transactions, which guarantees that no transaction is lost from the binary log.&#13;
&#13;
sync_binlog=N, where N is a value other than 0 or 1: The binary log is synchronized to disk after N binary log commit groups have been collected. In the event of a power failure or operating system crash, it is possible that the server has committed transactions that have not been flushed to the binary log. This setting can have a negative impact on performance due to the increased number of disk writes. A higher value improves performance, but with an increased risk of data loss.&#13;
&#13;
For the greatest possible durability and consistency in a replication setup that uses InnoDB with transactions, use these settings:&#13;
sync_binlog=1.&#13;
innodb_flush_log_at_trx_commit=1.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SYNC_BINLOG</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Table open cache</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},table_open_cache]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.TABLE_OPEN_CACHE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Thread cache size</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},thread_cache_size]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>How many threads the server should cache for reuse. When a client disconnects, the client's threads are put in the cache if there are fewer than thread_cache_size threads there. Requests for threads are satisfied by reusing threads taken from the cache if possible, and only when the cache is empty is a new thread created. This variable can be increased to improve performance if you have a lot of new connections. Normally, this does not provide a notable performance improvement if you have a good thread implementation. However, if your server sees hundreds of connections per second you should normally set thread_cache_size high enough so that most new connections use cached threads.&#13;
&#13;
The default value is based on the following formula, capped to a limit of 100:&#13;
8 + (max_connections / 100)</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREAD_CACHE_SIZE</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Thread handling</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},thread_handling]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Determines how the server handles threads for client connections. In addition to threads for client connections, this also applies to certain internal server threads, such as Galera slave threads.&#13;
- When the default one-thread-per-connection mode is enabled, the server uses one thread to handle each client connection.&#13;
- When the pool-of-threads mode is enabled, the server uses the thread pool for client connections.&#13;
- When the no-threads mode is enabled, the server uses a single thread for all client connections, which is really only usable for debugging.&#13;
&#13;
See more info: https://mariadb.com/kb/en/thread-pool-system-status-variables/#thread_handling</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (thread_handling)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>if (value.indexOf(&quot;THREAD_HANDLING&quot;) &gt; -1) {
  return value;
} else {
  return &quot;{\&quot;THREAD_HANDLING\&quot;:\&quot;0\&quot;}&quot;;
}</params>
                        </step>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREAD_HANDLING</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;no-threads&quot;:
    return 1;
    break;
  case &quot;one-thread-per-connection&quot;:
    return 2;
    break;
  case &quot;pool-of-threads&quot;:
    return 3;
    break;
  case &quot;loaded-dynamically&quot;:
    return 4;
    break;
  default:
    return 0;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Thread stack</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},thread_stack]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>B</units>
                    <description>The stack size for each thread. The default is large enough for normal operation. If the thread stack size is too small, it limits the complexity of the SQL statements that the server can handle, the recursion depth of stored procedures, and other memory-consuming actions.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.THREAD_STACK</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}' variable: Wait timeout</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},wait_timeout]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>s</units>
                    <description>The number of seconds the server waits for activity on a noninteractive connection before closing it.&#13;
&#13;
On thread startup, the session wait_timeout value is initialized from the global wait_timeout value or from the global interactive_timeout value, depending on the type of client (as defined by the CLIENT_INTERACTIVE connect option to mysql_real_connect()). See also interactive_timeout.</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.WAIT_TIMEOUT</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>[MariaDB] Instance '{$DBS_MYSQL_INSTANCE}' variable: WSREP_GTID mode</name>
                    <type>DEPENDENT</type>
                    <key>mysql.variable[{$DBS_MYSQL_INSTANCE},wsrep_gtid_mode]</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Wsrep GTID mode attempts to keep GTIDs consistent for Galera Cluster write sets on all cluster nodes.&#13;
GTID state is initially copied to a joiner node during an SST.&#13;
If you are planning to use Galera Cluster with MariaDB replication, then wsrep GTID mode can be helpful.&#13;
See more info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_gtid_mode</description>
                    <applications>
                        <application>
                            <name>MySQL: Variables</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>DBS MySQL (gtid_mode)</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.WSREP_GTID_MODE</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>Not supported in this MySQL version</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>switch (value) {
  case &quot;OFF&quot;:
    return 0;
    break;
  case &quot;ON&quot;:
    return 1;
    break;
  case &quot;OFF_PERMISSIVE&quot;:
    return 2;
    break;
  case &quot;ON_PERMISSIVE&quot;:
    return 3;
    break;
  default:
    return 4;
    break;
}</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>6h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.global.variables[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Setting 'wsrep_gtid_mode' has been changed</name>
                            <opdata>(current: {ITEM.VALUE})</opdata>
                            <priority>INFO</priority>
                            <description>Настройка 'wsrep_gtid_mode' была изменена.&#13;
Данная настройка отвечает за включение/отключение режима GTID и важна при репликации.&#13;
Доведите информацию до эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Version</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.version[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <delay>1h</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Version of MySQL instance.</description>
                    <applications>
                        <application>
                            <name>MySQL: Info</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Version of MySQL has been changed</name>
                            <opdata>(current: {ITEM.VALUE})</opdata>
                            <priority>INFO</priority>
                            <description>Версия экземпляра MySQL была изменена.&#13;
Необходимо проверить факт изменения версии, выяснить причину изменения версии (плановый апгрейд и т.п.), передать данные эксперту.</description>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>MySQL database discovery</name>
                    <type>DEPENDENT</type>
                    <key>mysql.database.discovery[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DBNAME}</macro>
                                <value>{$DBS_MYSQL_LLD_FILTER_DB_NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DBNAME}</macro>
                                <value>{$DBS_MYSQL_LLD_FILTER_DB_MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>[MySQL] Database '{#DBNAME}': Character set</name>
                            <type>DEPENDENT</type>
                            <key>mysql.db.info[{#DBNAME},db_character_set]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The schema default character set.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DB_CHARACTER_SET.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>6h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Database '{#DBNAME}': Collation name</name>
                            <type>DEPENDENT</type>
                            <key>mysql.db.info[{#DBNAME},db_collation_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The schema default collation.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DB_COLLATION_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>6h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Database '{#DBNAME}': Data size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.db.info[{#DBNAME},db_data_lenght]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, DATA_LENGTH is the length of the data file, in bytes.&#13;
&#13;
For InnoDB, DATA_LENGTH is the approximate amount of space allocated for the clustered index, in bytes. Specifically, it is the clustered index size, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DB_DATA_LENGTH.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Database '{#DBNAME}': Index size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.db.info[{#DBNAME},db_index_lenght]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, INDEX_LENGTH is the length of the index file, in bytes.&#13;
&#13;
For InnoDB, INDEX_LENGTH is the approximate amount of space allocated for non-clustered indexes, in bytes. Specifically, it is the sum of non-clustered index sizes, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DB_INDEX_LENGTH.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Database '{#DBNAME}': Total size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.db.info[{#DBNAME},db_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>Full database size (DATA_LENGTH + INDEX_LENGTH for all tables).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: Database: {#DBNAME}, Info</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.DBNAME== &quot;{#DBNAME}&quot;)].DB_SIZE.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{nodata({$DBS_MYSQL_DB_NODATA_WARN:&quot;{#DBNAME}&quot;})}=1</expression>
                                    <name>Database '{#DBNAME}' is not available</name>
                                    <priority>WARNING</priority>
                                    <description>Данные о состоянии базы данных '{#DBNAME}' не поступали более {$DBS_MYSQL_DB_NODATA_WARN:&quot;{#DBNAME}&quot;}.&#13;
Проверьте наличие базы данных, возможно она была удалена.&#13;
Так же проверьте работу zabbix-agent, возможно есть проблемы в его работе.&#13;
Передайте данные эксперту.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_MYSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}&gt;{$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{last()}&lt;={$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}</recovery_expression>
                                    <name>Size of database '{#DBNAME}' has increased</name>
                                    <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE1})</opdata>
                                    <priority>HIGH</priority>
                                    <description>Размер базы данных '{#DBNAME}' превысил порог {$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}.&#13;
Необходимо довести информацию до эксперта для дальнейшего анализа состояния базы данных.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_MYSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}&gt;{$DBS_MYSQL_DBSIZE_WARN:&quot;{#DBNAME}&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{last()}&lt;={$DBS_MYSQL_DBSIZE_WARN:&quot;{#DBNAME}&quot;}</recovery_expression>
                                    <name>Size of database '{#DBNAME}' has increased</name>
                                    <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_DBSIZE_WARN:&quot;{#DBNAME}&quot;}, alert started: {ITEM.VALUE1})</opdata>
                                    <priority>WARNING</priority>
                                    <description>Размер базы данных '{#DBNAME}' превысил порог {$DBS_MYSQL_DBSIZE_WARN:&quot;{#DBNAME}&quot;}.&#13;
Необходимо довести информацию до эксперта для дальнейшего анализа состояния базы данных.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                        <dependency>
                                            <name>Size of database '{#DBNAME}' has increased</name>
                                            <expression>{DBS_Template DB MySQL:mysql.db.info[{#DBNAME},db_size].last()}&gt;{$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.db.info[{#DBNAME},db_size].last()}&lt;={$DBS_MYSQL_DBSIZE_CRIT:&quot;{#DBNAME}&quot;}</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Database</tag>
                                            <value>{#DBNAME}</value>
                                        </tag>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_MYSQL_INSTANCE}</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>mysql.db.info[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(db){
    return {
        &quot;{#DBNAME}&quot;: db.DBNAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>MySQL error log discovery</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>mysql.errorlog.discovery[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    <delay>5m</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Log file '{#LOG_ERROR}' content</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>logrt[&quot;{#LOG_ERROR}&quot;,&quot;{$DBS_MYSQL_ERRORLOG_REGEXP}&quot;,,,skip,,,{$DBS_MYSQL_ERRORLOG_OPTIONS}]</key>
                            <delay>10s</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>LOG</value_type>
                            <applications>
                                <application>
                                    <name>MySQL: Info</name>
                                </application>
                            </applications>
                            <logtimefmt>yyyy-MM-ddThh:mm:ss</logtimefmt>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{iregexp(&quot;Event Scheduler:.*Deadlock found when trying to get lock;.*&quot;,5m)}&gt;0 and {$DBS_MYSQL_DISABLE_SCHEDULER_DEADLOCK_DETECT}=0</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{nodata(10m)}&lt;&gt;1 or {$DBS_MYSQL_DISABLE_SCHEDULER_DEADLOCK_DETECT}=1</recovery_expression>
                                    <name>{{ITEM.VALUE}.iregsub(&quot;Event Scheduler: \[(.*)\]\[(.*)\] Deadlock found when trying to get lock;.*&quot;, &quot;Deadlock detected during event scheduler is running (User: '\1', Event: '\2')&quot;)}</name>
                                    <priority>WARNING</priority>
                                    <description>В лог-файле &quot;{#LOG_ERROR}&quot; обнаружена взаимная блокировка при выполнении процедуры.&#13;
Сообщите заказчику детали блокировки из аларма (это название процедуры и логин пользователя который ее запустил).&#13;
Так же подключитесь к MySQL и выполните запрос: https://u.to/2ktnFw&#13;
Если запрос вернет данные о наличию взаимной блокировки, то отправьте их заказчику.&#13;
Доведите информацию до эксперта.</description>
                                    <tags>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>Errorlog</value>
                                        </tag>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>Scheduler</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{iregexp(&quot;InnoDB&quot;,5m)}&gt;0</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{nodata(10m)}&lt;&gt;1</recovery_expression>
                                    <name>{{ITEM.VALUE}.iregsub(&quot;InnoDB: (.*)&quot;, &quot;Fatal error in InnoDB engine (Error: '\1')&quot;)}</name>
                                    <priority>HIGH</priority>
                                    <description>В лог-файле &quot;{#LOG_ERROR}&quot; обнаружена критическая ошибка в работе InnoDB.&#13;
Как можно скорее просмотрите лог-файл на сервере.&#13;
Передайте информацию эксперту.</description>
                                    <tags>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>Errorlog</value>
                                        </tag>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>InnoDB</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Instance '{$DBS_MYSQL_INSTANCE}': Log file '{#LOG_ERROR}' size</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>vfs.file.size[&quot;{#LOG_ERROR}&quot;]</key>
                            <history>30d</history>
                            <units>B</units>
                            <applications>
                                <application>
                                    <name>MySQL: Info</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>MySQL slave discovery</name>
                    <type>DEPENDENT</type>
                    <key>mysql.slave.discovery[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Last IO Errno</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},last_io_errno]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].LAST_IO_ERRNO.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Last IO Error</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},last_io_error]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>The last errors registered by the I/O and SQL threads when processing the relay log. Ideally these should be blank, indicating no errors.</description>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].LAST_IO_ERROR.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Last SQL Errno</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},last_sql_errno]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].LAST_SQL_ERRNO.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Last SQL Error</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},last_sql_error]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>The last errors registered by the I/O and SQL threads when processing the relay log. Ideally these should be blank, indicating no errors.</description>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].LAST_SQL_ERROR.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Seconds Behind Master</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},seconds_behind_master]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>s</units>
                            <description>The number of seconds that the slave SQL thread is behind processing the master binary log. A high number (or an increasing one) can indicate that the slave is unable to handle events from the master in a timely fashion.</description>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].SECONDS_BEHIND_MASTER.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>NULL</params>
                                    <error_handler>CUSTOM_ERROR</error_handler>
                                    <error_handler_params>Replication is not performed</error_handler_params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(10m)}&gt;{$DBS_MYSQL_APPLY_LAG_CRIT:&quot;{#MASTER_UUID}&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;={$DBS_MYSQL_APPLY_LAG_CRIT:&quot;{#MASTER_UUID}&quot;}</recovery_expression>
                                    <name>Replication lag is too high</name>
                                    <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_APPLY_LAG_CRIT:&quot;{#MASTER_UUID}&quot;}, alert started: {ITEM.VALUE1})</opdata>
                                    <priority>HIGH</priority>
                                    <description>Очень высокое отставание slave реплики.&#13;
Проверьте состояние с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.&#13;
Сообщите о проблеме эксперту.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_MYSQL_INSTANCE}</value>
                                        </tag>
                                        <tag>
                                            <tag>MasterHost</tag>
                                            <value>{#MASTER_HOST}</value>
                                        </tag>
                                        <tag>
                                            <tag>MasterPort</tag>
                                            <value>{#MASTER_PORT}</value>
                                        </tag>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>Replication</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{min(10m)}&gt;{$DBS_MYSQL_APPLY_LAG_WARN:&quot;{#MASTER_UUID}&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;={$DBS_MYSQL_APPLY_LAG_WARN:&quot;{#MASTER_UUID}&quot;}</recovery_expression>
                                    <name>Replication lag is too high</name>
                                    <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_APPLY_LAG_WARN:&quot;{#MASTER_UUID}&quot;}, alert started: {ITEM.VALUE1})</opdata>
                                    <priority>WARNING</priority>
                                    <description>Высокое отставание slave реплики.&#13;
Проверьте состояние с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.&#13;
Сообщите о проблеме эксперту.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Instance access failed</name>
                                            <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                        </dependency>
                                        <dependency>
                                            <name>Replication lag is too high</name>
                                            <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},seconds_behind_master].min(10m)}&gt;{$DBS_MYSQL_APPLY_LAG_CRIT:&quot;{#MASTER_UUID}&quot;}</expression>
                                            <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},seconds_behind_master].max(5m)}&lt;={$DBS_MYSQL_APPLY_LAG_CRIT:&quot;{#MASTER_UUID}&quot;}</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>Instance</tag>
                                            <value>{$DBS_MYSQL_INSTANCE}</value>
                                        </tag>
                                        <tag>
                                            <tag>MasterHost</tag>
                                            <value>{#MASTER_HOST}</value>
                                        </tag>
                                        <tag>
                                            <tag>MasterPort</tag>
                                            <value>{#MASTER_PORT}</value>
                                        </tag>
                                        <tag>
                                            <tag>Subsystem</tag>
                                            <value>Replication</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Slave IO Running</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},slave_io_running]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Whether the I/O thread for reading the master's binary log is running. &#13;
Normally, you want this to be Yes unless you have not yet started replication or have explicitly stopped it with STOP SLAVE.</description>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>DBS MySQL (Replication slave IO state)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].SLAVE_IO_RUNNING.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;No&quot;:
    return 0;
    break;
  case &quot;Yes&quot;:
    return 1;
    break;
  case &quot;Connecting&quot;:
    return 2;
    break;
  default:
    return 3;
    break;
}</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] Replication '{#MASTER_HOST}:{#MASTER_PORT}': Slave SQL Running</name>
                            <type>DEPENDENT</type>
                            <key>mysql.slave[{#MASTER_UUID},slave_sql_running]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>Whether the SQL thread for executing events in the relay log is running. &#13;
As with the I/O thread, this should normally be Yes.</description>
                            <applications>
                                <application>
                                    <name>MySQL: Replication</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>DBS MySQL (Replication slave SQL state)</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.MASTER_UUID== &quot;{#MASTER_UUID}&quot;)].SLAVE_SQL_RUNNING.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>switch (value) {
  case &quot;No&quot;:
    return 0;
    break;
  case &quot;Yes&quot;:
    return 1;
    break;
  default:
    return 2;
    break;
}</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_io_errno].last()}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}=1</recovery_expression>
                            <name>Replication process is stopped (IO thread not running)</name>
                            <priority>WARNING</priority>
                            <description>Репликация остановлена (IO thread) в ручном режиме, возможно для выполнения каких-то работ.&#13;
Проверьте состояние ошибок репликации с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Replication process is stopped due to an error (IO thread not running)</name>
                                    <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_io_errno].last()}&lt;&gt;0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>MasterHost</tag>
                                    <value>{#MASTER_HOST}</value>
                                </tag>
                                <tag>
                                    <tag>MasterPort</tag>
                                    <value>{#MASTER_PORT}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_sql_errno].last()}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}=1</recovery_expression>
                            <name>Replication process is stopped (SQL thread not running)</name>
                            <priority>WARNING</priority>
                            <description>Репликация остановлена (SQL thread) в ручном режиме, возможно для выполнения каких-то работ.&#13;
Проверьте состояние ошибок репликации с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                                <dependency>
                                    <name>Replication process is stopped due to an error (SQL thread not running)</name>
                                    <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_sql_errno].last()}&lt;&gt;0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>MasterHost</tag>
                                    <value>{#MASTER_HOST}</value>
                                </tag>
                                <tag>
                                    <tag>MasterPort</tag>
                                    <value>{#MASTER_PORT}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_io_errno].last()}&lt;&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_io_running].last()}=1</recovery_expression>
                            <name>Replication process is stopped due to an error (IO thread not running)</name>
                            <opdata>(last errno: {ITEM.LASTVALUE2})</opdata>
                            <priority>HIGH</priority>
                            <description>Репликация остановлена (IO thread) в результате критической ошибки.&#13;
Проверьте состояние ошибок репликации с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.&#13;
Сообщите о проблеме эксперту.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>MasterHost</tag>
                                    <value>{#MASTER_HOST}</value>
                                </tag>
                                <tag>
                                    <tag>MasterPort</tag>
                                    <value>{#MASTER_PORT}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}&lt;&gt;1 and {DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},last_sql_errno].last()}&lt;&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{DBS_Template DB MySQL:mysql.slave[{#MASTER_UUID},slave_sql_running].last()}=1</recovery_expression>
                            <name>Replication process is stopped due to an error (SQL thread not running)</name>
                            <opdata>(last errno: {ITEM.LASTVALUE2})</opdata>
                            <priority>HIGH</priority>
                            <description>Репликация остановлена (SQL thread) в результате критической ошибки.&#13;
Проверьте состояние ошибок репликации с помощью команды &quot;SHOW SLAVE STATUS\G&quot;.&#13;
Сообщите о проблеме эксперту.</description>
                            <dependencies>
                                <dependency>
                                    <name>Instance access failed</name>
                                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>Instance</tag>
                                    <value>{$DBS_MYSQL_INSTANCE}</value>
                                </tag>
                                <tag>
                                    <tag>MasterHost</tag>
                                    <value>{#MASTER_HOST}</value>
                                </tag>
                                <tag>
                                    <tag>MasterPort</tag>
                                    <value>{#MASTER_PORT}</value>
                                </tag>
                                <tag>
                                    <tag>Subsystem</tag>
                                    <value>Replication</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>mysql.slave.status[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(slave){
    return {
        &quot;{#MASTER_UUID}&quot;: slave.MASTER_UUID,
        &quot;{#MASTER_HOST}&quot;: slave.MASTER_HOST,
        &quot;{#MASTER_PORT}&quot;: slave.MASTER_PORT
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>MySQL TOP{$DBS_MYSQL_TOP_TABLE_BY_ROWS} table by rows discovery</name>
                    <type>DEPENDENT</type>
                    <key>mysql.top_table_by_rows.discovery[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Data free size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},data_free_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>The number of allocated but unused bytes.&#13;
&#13;
InnoDB tables report the free space of the tablespace to which the table belongs. For a table located in the shared tablespace, this is the free space of the shared tablespace. If you are using multiple tablespaces and the table has its own tablespace, the free space is for only that table. Free space means the number of bytes in completely free extents minus a safety margin. Even if free space displays as 0, it may be possible to insert rows as long as new extents need not be allocated.&#13;
&#13;
For NDB Cluster, DATA_FREE shows the space allocated on disk for, but not used by, a Disk Data table or fragment on disk. (In-memory data resource usage is reported by the DATA_LENGTH column.)&#13;
&#13;
For partitioned tables, this value is only an estimate and may not be absolutely correct.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DATA_FREE_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Data size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},data_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, DATA_LENGTH is the length of the data file, in bytes.&#13;
&#13;
For InnoDB, DATA_LENGTH is the approximate amount of space allocated for the clustered index, in bytes. Specifically, it is the clustered index size, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DATA_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Database name</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},db_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The name of the schema (database) to which the table belongs.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DB_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Index size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},index_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, INDEX_LENGTH is the length of the index file, in bytes.&#13;
&#13;
For InnoDB, INDEX_LENGTH is the approximate amount of space allocated for non-clustered indexes, in bytes. Specifically, it is the sum of non-clustered index sizes, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].INDEX_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table engine</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},table_engine]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The storage engine for the table.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_ENGINE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table name</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},table_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The name of the table.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table rows</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},table_rows]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>The number of rows. Some storage engines, such as MyISAM, store the exact count. For other storage engines, such as InnoDB, this value is an approximation, and may vary from the actual value by as much as 40% to 50%. In such cases, use SELECT COUNT(*) to obtain an accurate count.&#13;
&#13;
TABLE_ROWS is NULL for INFORMATION_SCHEMA tables.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_ROWS.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Total size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_rows[{#TOP},total_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>Full table size (DATA_LENGTH + INDEX_LENGTH).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table rows</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TOTAL_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>mysql.top10_table_by_rows[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_ROWS}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(tops){
    return {
        &quot;{#TOP}&quot;: tops.TOP,
        &quot;{#DB_NAME}&quot;: tops.DB_NAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>MySQL TOP{$DBS_MYSQL_TOP_TABLE_BY_SIZE} table by size discovery</name>
                    <type>DEPENDENT</type>
                    <key>mysql.top_table_by_size.discovery[{$DBS_MYSQL_INSTANCE}]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Data free size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},data_free_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>The number of allocated but unused bytes.&#13;
&#13;
InnoDB tables report the free space of the tablespace to which the table belongs. For a table located in the shared tablespace, this is the free space of the shared tablespace. If you are using multiple tablespaces and the table has its own tablespace, the free space is for only that table. Free space means the number of bytes in completely free extents minus a safety margin. Even if free space displays as 0, it may be possible to insert rows as long as new extents need not be allocated.&#13;
&#13;
For NDB Cluster, DATA_FREE shows the space allocated on disk for, but not used by, a Disk Data table or fragment on disk. (In-memory data resource usage is reported by the DATA_LENGTH column.)&#13;
&#13;
For partitioned tables, this value is only an estimate and may not be absolutely correct.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DATA_FREE_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Data size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},data_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, DATA_LENGTH is the length of the data file, in bytes.&#13;
&#13;
For InnoDB, DATA_LENGTH is the approximate amount of space allocated for the clustered index, in bytes. Specifically, it is the clustered index size, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DATA_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Database name</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},db_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The name of the schema (database) to which the table belongs.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].DB_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Index size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},index_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>For MyISAM, INDEX_LENGTH is the length of the index file, in bytes.&#13;
&#13;
For InnoDB, INDEX_LENGTH is the approximate amount of space allocated for non-clustered indexes, in bytes. Specifically, it is the sum of non-clustered index sizes, in pages, multiplied by the InnoDB page size.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].INDEX_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table engine</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},table_engine]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The storage engine for the table.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_ENGINE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table name</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},table_name]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The name of the table.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_NAME.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Table rows</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},table_rows]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <description>The number of rows. Some storage engines, such as MyISAM, store the exact count. For other storage engines, such as InnoDB, this value is an approximation, and may vary from the actual value by as much as 40% to 50%. In such cases, use SELECT COUNT(*) to obtain an accurate count.&#13;
&#13;
TABLE_ROWS is NULL for INFORMATION_SCHEMA tables.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TABLE_ROWS.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>[MySQL] TOP{#TOP}: Total size</name>
                            <type>DEPENDENT</type>
                            <key>mysql.top10_table_by_size[{#TOP},total_size]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <description>Full table size (DATA_LENGTH + INDEX_LENGTH).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>MySQL: TOP10 by table size</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.TOP== &quot;{#TOP}&quot;)].TOTAL_SIZE.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>mysql.top10_table_by_size[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT},{$DBS_MYSQL_TOP_TABLE_BY_SIZE}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>output = JSON.parse(value).map(function(tops){
    return {
        &quot;{#TOP}&quot;: tops.TOP,
        &quot;{#DB_NAME}&quot;: tops.DB_NAME
    }})
return JSON.stringify({&quot;data&quot;: output})</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>DBType</tag>
                    <value>MySQL</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$DBS_DBMON_AGENTD_NODATA_CRIT}</macro>
                    <value>15m</value>
                </macro>
                <macro>
                    <macro>{$DBS_DBMON_AGENTD_NODATA_WARN}</macro>
                    <value>8m</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_ABORTED_CONN_MAX_WARN}</macro>
                    <value>3</value>
                    <description>The number of failed attempts to connect to the MySQL server for trigger expression</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_APPLY_LAG_CRIT}</macro>
                    <value>2h</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_APPLY_LAG_WARN}</macro>
                    <value>1h</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_BUFFER_UTIL_MIN_PRC_WARN}</macro>
                    <value>50</value>
                    <description>The minimum buffer pool utilization in percent for trigger expression</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_CONNECTION_PRC_CRIT}</macro>
                    <value>95</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_CONNECTION_PRC_WARN}</macro>
                    <value>85</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_CREATED_TMP_FILES_ON_DISK_WARN}</macro>
                    <value>10</value>
                    <description>The maximum create tmp files on disk per second for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_CREATED_TMP_TABLES_ON_DISK_WARN}</macro>
                    <value>10</value>
                    <description>The maximum create tmp tables on disk per second for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_CREATED_TMP_TABLES_ON_MEMORY_WARN}</macro>
                    <value>30</value>
                    <description>The maximum create tmp tables on memory per second for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_DBSIZE_CRIT}</macro>
                    <value>70G</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_DBSIZE_WARN}</macro>
                    <value>50G</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_DB_NODATA_WARN}</macro>
                    <value>1h</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_DISABLE_SCHEDULER_DEADLOCK_DETECT}</macro>
                    <value>0</value>
                    <description>Disable trigger &quot;Deadlock detected during event scheduler is running&quot;</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_ERRORLOG_OPTIONS}</macro>
                    <value>mtime-noreread</value>
                    <description>mtime-reread or mtime-noreread, see detail https://www.zabbix.com/documentation/4.4/manual/introduction/whatsnew447</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_ERRORLOG_REGEXP}</macro>
                    <value>PANIC|FATAL|ERROR|[Ee]rror</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_HOST}</macro>
                    <value>localhost</value>
                    <description>MySQL host address</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_INSTANCE}</macro>
                    <value>mysql_3306</value>
                    <description>Unique instance name of MySQL</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_LLD_FILTER_DB_MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable databases</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_LLD_FILTER_DB_NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered databases</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_PING_NODATA_CRIT}</macro>
                    <value>12m</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_PING_NODATA_WARN}</macro>
                    <value>6m</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_PORT}</macro>
                    <value>3306</value>
                    <description>MySQL port number</description>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_QCACHE_EFFICIENCY_PRC_WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_SLOW_QUERIES_MAX_WARN}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_THREADS_RUNNING_PRC_CRIT}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_THREADS_RUNNING_PRC_WARN}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_TOP_TABLE_BY_ROWS}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$DBS_MYSQL_TOP_TABLE_BY_SIZE}</macro>
                    <value>10</value>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>[MySQL] Performance</name>
                    <hsize>2</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL] Operations</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL] Queries</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL] Connections</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL] Bandwidth</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL]  InnoDB buffer pool</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>[MySQL] Threads</name>
                                <host>DBS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.perf[{$DBS_MYSQL_INSTANCE},buffer_pool_utilization].max(5m)}&lt;{$DBS_MYSQL_BUFFER_UTIL_MIN_PRC_WARN} and {DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},uptime].last()}&gt;24h</expression>
            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
            <recovery_expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},uptime].last()}&lt;24h</recovery_expression>
            <name>Buffer pool utilization is too low</name>
            <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_BUFFER_UTIL_MIN_PRC_WARN}%, alert started: {ITEM.VALUE1})</opdata>
            <priority>WARNING</priority>
            <description>По прошествии 24 часов после запуска MySQL использование пула буферов InnoDB составляет менее {$DBS_MYSQL_BUFFER_UTIL_MIN_PRC_WARN}% за последние 5 минут.&#13;
Это означает, что для пула буферов InnoDB выделено много оперативной памяти, которая в данный момент не используется и которую Вы можете легко перераспределить.&#13;
Доведите информацию до эксперта.</description>
            <dependencies>
                <dependency>
                    <name>Instance access failed</name>
                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},qcache_efficiency].avg(30m)}&lt;{$DBS_MYSQL_QCACHE_EFFICIENCY_PRC_WARN} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_limit].last()}&gt;0 and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},query_cache_type].last()}&gt;0 and {DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},uptime].last()}&gt;24h</expression>
            <name>Query cache efficiency is very low</name>
            <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_QCACHE_EFFICIENCY_PRC_WARN}%, alert started: {ITEM.VALUE1})</opdata>
            <url>https://dev.mysql.com/doc/refman/5.7/en/query-cache-status-and-maintenance.html</url>
            <priority>WARNING</priority>
            <description>Процент эффективности кэша запросов, составляет менее {$DBS_MYSQL_QCACHE_EFFICIENCY_PRC_WARN}%, указывает на проблему с производительностью. Постарайтесь сократить набор результатов, создав более строгие запросы. Если это невозможно, Вы можете постепенно увеличивать параметр query_cache_limit, чтобы большее количество ваших наборов результатов действительно попадало в кеш. Увеличивайте query_cache_limit постепенно, сильно высокие значения могут снизить производительность.</description>
            <dependencies>
                <dependency>
                    <name>Instance access failed</name>
                    <expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].max(#2)}=0</expression>
                    <recovery_expression>{DBS_Template DB MySQL:mysql.ping[{$DBS_MYSQL_HOST},{$DBS_MYSQL_PORT}].min(#2)}=1</recovery_expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Category</tag>
                    <value>Performance</value>
                </tag>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].min(2m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_CONNECTION_PRC_CRIT} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0</expression>
            <name>Too many connections</name>
            <opdata>(current: {ITEM.LASTVALUE1}, max: {ITEM.LASTVALUE2}, alert started {ITEM.VALUE1})</opdata>
            <priority>HIGH</priority>
            <description>Текущее количество открытых соединений очень велико (потоков в состоянии connected).&#13;
Зайдите в консоль mysql и выполните SHOW PROCESSLIST;&#13;
Проанализируйте кто занимает больше всего соединений, желательно уменьшить их количество.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].min(3m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_CONNECTION_PRC_WARN} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0</expression>
            <name>Too many connections</name>
            <opdata>(current: {ITEM.LASTVALUE1}, max: {ITEM.LASTVALUE2}, alert started {ITEM.VALUE1})</opdata>
            <priority>WARNING</priority>
            <description>Текущее количество открытых соединений велико (потоков в состоянии connected).&#13;
Зайдите в консоль mysql и выполните SHOW PROCESSLIST;&#13;
Проанализируйте кто занимает больше всего соединений, желательно уменьшить их количество.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <dependencies>
                <dependency>
                    <name>Too many connections</name>
                    <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].min(2m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_CONNECTION_PRC_CRIT} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_running].min(2m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_THREADS_RUNNING_PRC_CRIT} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0 and {DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].last()}&gt;0</expression>
            <name>Too many threads running</name>
            <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_THREADS_RUNNING_PRC_CRIT}%, alert started {ITEM.VALUE1})</opdata>
            <priority>HIGH</priority>
            <description>Текущее количество работающих потоков очень велико.&#13;
Зайдите в консоль mysql и выполните:&#13;
SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST WHERE COMMAND NOT REGEXP '(Daemon|Sleep|Binlog Dump|Binlog Dump GTID)' AND ID != CONNECTION_ID() AND USER NOT REGEXP '(system user)' AND STATE NOT REGEXP '(slave|relay|event)';&#13;
Проанализируйте кто занимает больше всего работающих соединений, желательно уменьшить их количество.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_running].min(3m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_THREADS_RUNNING_PRC_WARN} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0 and {DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].last()}&gt;0</expression>
            <name>Too many threads running</name>
            <opdata>(current: {ITEM.LASTVALUE1}, threshold: {$DBS_MYSQL_THREADS_RUNNING_PRC_WARN}%, alert started {ITEM.VALUE1})</opdata>
            <priority>WARNING</priority>
            <description>Текущее количество работающих тредов (потоков) велико.&#13;
Зайдите в консоль mysql и выполните:&#13;
SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST WHERE COMMAND NOT REGEXP '(Daemon|Sleep|Binlog Dump|Binlog Dump GTID)' AND ID != CONNECTION_ID() AND USER NOT REGEXP '(system user)' AND STATE NOT REGEXP '(slave|relay|event)';&#13;
Проанализируйте кто занимает больше всего работающих соединений, желательно уменьшить их количество.&#13;
Сообщите заказчику о проблеме, а так же передайте данные эксперту для анализа.</description>
            <dependencies>
                <dependency>
                    <name>Too many threads running</name>
                    <expression>{DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_running].min(2m)}/{DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}*100&gt;{$DBS_MYSQL_THREADS_RUNNING_PRC_CRIT} and {DBS_Template DB MySQL:mysql.variable[{$DBS_MYSQL_INSTANCE},max_connections].last()}&gt;0 and {DBS_Template DB MySQL:mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected].last()}&gt;0</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>Instance</tag>
                    <value>{$DBS_MYSQL_INSTANCE}</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>[MySQL] Bandwidth</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>00AA00</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},bytes_received_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>3333FF</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},bytes_sent_rate]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL] Connections</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_clients_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},aborted_connects_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},connections_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},max_used_connections]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL]  InnoDB buffer pool</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_free]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_pages_total]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_read_requests]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},innodb_buffer_pool_reads]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL] Operations</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_delete_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>0000EE</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_insert_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_select_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>C800C8</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},com_update_rate]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL] Queries</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},queries_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},questions_rate]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},slow_queries_rate]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL] Query Cache Performance</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_hits]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_inserts]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},qcache_lowmem_prunes]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>[MySQL] Threads</name>
            <graph_items>
                <graph_item>
                    <color>A54F10</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_cached]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_connected]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>DBS_Template DB MySQL</host>
                        <key>mysql.status[{$DBS_MYSQL_INSTANCE},threads_running]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>DBS MariaDB (slave_parallel_mode)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>optimistic</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>conservative</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>aggressive</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>minimal</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>none</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (binlog_format)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>UNKNOWN</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>STATEMENT</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>ROW</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>MIXED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (binlog_row_image)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>UNKNOWN</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>FULL</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>MINIMAL</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>NOBLOB</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (enforce_gtid_consistency)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>WARN</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (gtid_mode)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>OFF_PERMISSIVE</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>ON_PERMISSIVE</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (have_query_cache)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>NO</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>YES</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (Instance ping)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>ERROR</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>CONNECTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (log_bin)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>UNKNOWN</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (ON-OFF)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (query_cache_type)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>DEMAND</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (Replication slave IO state)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>No</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Yes</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Connecting</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (Replication slave SQL state)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>No</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Yes</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (slave_parallel_type)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>DATABASE</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>LOGICAL_CLOCK</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (slave_preserve_commit_order)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>OFF</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>ON</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>NOT SUPPORTED</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>DBS MySQL (thread_handling)</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>no-threads</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>one-thread-per-connection</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>pool-of-threads</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>loaded-dynamically</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Zabbix agent ping status</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
